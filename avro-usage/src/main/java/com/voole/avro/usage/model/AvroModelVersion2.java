/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.voole.avro.usage.model;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroModelVersion2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroModelVersion2\",\"namespace\":\"com.voole.avro.usage.model\",\"fields\":[{\"name\":\"name\",\"type\":[\"string\",\"null\"]},{\"name\":\"num\",\"type\":[\"long\",\"null\"]},{\"name\":\"total\",\"type\":[\"long\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.Long num;
  @Deprecated public java.lang.Long total;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AvroModelVersion2() {}

  /**
   * All-args constructor.
   */
  public AvroModelVersion2(java.lang.CharSequence name, java.lang.Long num, java.lang.Long total) {
    this.name = name;
    this.num = num;
    this.total = total;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return num;
    case 2: return total;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: num = (java.lang.Long)value$; break;
    case 2: total = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'num' field.
   */
  public java.lang.Long getNum() {
    return num;
  }

  /**
   * Sets the value of the 'num' field.
   * @param value the value to set.
   */
  public void setNum(java.lang.Long value) {
    this.num = value;
  }

  /**
   * Gets the value of the 'total' field.
   */
  public java.lang.Long getTotal() {
    return total;
  }

  /**
   * Sets the value of the 'total' field.
   * @param value the value to set.
   */
  public void setTotal(java.lang.Long value) {
    this.total = value;
  }

  /** Creates a new AvroModelVersion2 RecordBuilder */
  public static com.voole.avro.usage.model.AvroModelVersion2.Builder newBuilder() {
    return new com.voole.avro.usage.model.AvroModelVersion2.Builder();
  }
  
  /** Creates a new AvroModelVersion2 RecordBuilder by copying an existing Builder */
  public static com.voole.avro.usage.model.AvroModelVersion2.Builder newBuilder(com.voole.avro.usage.model.AvroModelVersion2.Builder other) {
    return new com.voole.avro.usage.model.AvroModelVersion2.Builder(other);
  }
  
  /** Creates a new AvroModelVersion2 RecordBuilder by copying an existing AvroModelVersion2 instance */
  public static com.voole.avro.usage.model.AvroModelVersion2.Builder newBuilder(com.voole.avro.usage.model.AvroModelVersion2 other) {
    return new com.voole.avro.usage.model.AvroModelVersion2.Builder(other);
  }
  
  /**
   * RecordBuilder for AvroModelVersion2 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroModelVersion2>
    implements org.apache.avro.data.RecordBuilder<AvroModelVersion2> {

    private java.lang.CharSequence name;
    private java.lang.Long num;
    private java.lang.Long total;

    /** Creates a new Builder */
    private Builder() {
      super(com.voole.avro.usage.model.AvroModelVersion2.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.voole.avro.usage.model.AvroModelVersion2.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.num)) {
        this.num = data().deepCopy(fields()[1].schema(), other.num);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.total)) {
        this.total = data().deepCopy(fields()[2].schema(), other.total);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AvroModelVersion2 instance */
    private Builder(com.voole.avro.usage.model.AvroModelVersion2 other) {
            super(com.voole.avro.usage.model.AvroModelVersion2.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.num)) {
        this.num = data().deepCopy(fields()[1].schema(), other.num);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.total)) {
        this.total = data().deepCopy(fields()[2].schema(), other.total);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.voole.avro.usage.model.AvroModelVersion2.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public com.voole.avro.usage.model.AvroModelVersion2.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'num' field */
    public java.lang.Long getNum() {
      return num;
    }
    
    /** Sets the value of the 'num' field */
    public com.voole.avro.usage.model.AvroModelVersion2.Builder setNum(java.lang.Long value) {
      validate(fields()[1], value);
      this.num = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'num' field has been set */
    public boolean hasNum() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'num' field */
    public com.voole.avro.usage.model.AvroModelVersion2.Builder clearNum() {
      num = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'total' field */
    public java.lang.Long getTotal() {
      return total;
    }
    
    /** Sets the value of the 'total' field */
    public com.voole.avro.usage.model.AvroModelVersion2.Builder setTotal(java.lang.Long value) {
      validate(fields()[2], value);
      this.total = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'total' field has been set */
    public boolean hasTotal() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'total' field */
    public com.voole.avro.usage.model.AvroModelVersion2.Builder clearTotal() {
      total = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public AvroModelVersion2 build() {
      try {
        AvroModelVersion2 record = new AvroModelVersion2();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.num = fieldSetFlags()[1] ? this.num : (java.lang.Long) defaultValue(fields()[1]);
        record.total = fieldSetFlags()[2] ? this.total : (java.lang.Long) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}

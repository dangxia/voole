/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.voole.hobbit2.kafka.avro.order;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class OrderPlayAliveReqSrvV3 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderPlayAliveReqSrvV3\",\"namespace\":\"com.voole.hobbit2.kafka.avro.order\",\"fields\":[{\"name\":\"srvIP\",\"type\":[\"long\",\"null\"]},{\"name\":\"connTimes\",\"type\":[\"long\",\"null\"]},{\"name\":\"transNum\",\"type\":[\"long\",\"null\"]},{\"name\":\"avgRTT\",\"type\":[\"long\",\"null\"]},{\"name\":\"accBytes\",\"type\":[\"long\",\"null\"]},{\"name\":\"accTime\",\"type\":[\"long\",\"null\"]},{\"name\":\"avgSpeed\",\"type\":[\"long\",\"null\"]},{\"name\":\"speed\",\"type\":[\"long\",\"null\"]},{\"name\":\"RTT\",\"type\":[\"long\",\"null\"]},{\"name\":\"nodeID\",\"type\":[\"long\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Long srvIP;
  @Deprecated public java.lang.Long connTimes;
  @Deprecated public java.lang.Long transNum;
  @Deprecated public java.lang.Long avgRTT;
  @Deprecated public java.lang.Long accBytes;
  @Deprecated public java.lang.Long accTime;
  @Deprecated public java.lang.Long avgSpeed;
  @Deprecated public java.lang.Long speed;
  @Deprecated public java.lang.Long RTT;
  @Deprecated public java.lang.Long nodeID;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public OrderPlayAliveReqSrvV3() {}

  /**
   * All-args constructor.
   */
  public OrderPlayAliveReqSrvV3(java.lang.Long srvIP, java.lang.Long connTimes, java.lang.Long transNum, java.lang.Long avgRTT, java.lang.Long accBytes, java.lang.Long accTime, java.lang.Long avgSpeed, java.lang.Long speed, java.lang.Long RTT, java.lang.Long nodeID) {
    this.srvIP = srvIP;
    this.connTimes = connTimes;
    this.transNum = transNum;
    this.avgRTT = avgRTT;
    this.accBytes = accBytes;
    this.accTime = accTime;
    this.avgSpeed = avgSpeed;
    this.speed = speed;
    this.RTT = RTT;
    this.nodeID = nodeID;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return srvIP;
    case 1: return connTimes;
    case 2: return transNum;
    case 3: return avgRTT;
    case 4: return accBytes;
    case 5: return accTime;
    case 6: return avgSpeed;
    case 7: return speed;
    case 8: return RTT;
    case 9: return nodeID;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: srvIP = (java.lang.Long)value$; break;
    case 1: connTimes = (java.lang.Long)value$; break;
    case 2: transNum = (java.lang.Long)value$; break;
    case 3: avgRTT = (java.lang.Long)value$; break;
    case 4: accBytes = (java.lang.Long)value$; break;
    case 5: accTime = (java.lang.Long)value$; break;
    case 6: avgSpeed = (java.lang.Long)value$; break;
    case 7: speed = (java.lang.Long)value$; break;
    case 8: RTT = (java.lang.Long)value$; break;
    case 9: nodeID = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'srvIP' field.
   */
  public java.lang.Long getSrvIP() {
    return srvIP;
  }

  /**
   * Sets the value of the 'srvIP' field.
   * @param value the value to set.
   */
  public void setSrvIP(java.lang.Long value) {
    this.srvIP = value;
  }

  /**
   * Gets the value of the 'connTimes' field.
   */
  public java.lang.Long getConnTimes() {
    return connTimes;
  }

  /**
   * Sets the value of the 'connTimes' field.
   * @param value the value to set.
   */
  public void setConnTimes(java.lang.Long value) {
    this.connTimes = value;
  }

  /**
   * Gets the value of the 'transNum' field.
   */
  public java.lang.Long getTransNum() {
    return transNum;
  }

  /**
   * Sets the value of the 'transNum' field.
   * @param value the value to set.
   */
  public void setTransNum(java.lang.Long value) {
    this.transNum = value;
  }

  /**
   * Gets the value of the 'avgRTT' field.
   */
  public java.lang.Long getAvgRTT() {
    return avgRTT;
  }

  /**
   * Sets the value of the 'avgRTT' field.
   * @param value the value to set.
   */
  public void setAvgRTT(java.lang.Long value) {
    this.avgRTT = value;
  }

  /**
   * Gets the value of the 'accBytes' field.
   */
  public java.lang.Long getAccBytes() {
    return accBytes;
  }

  /**
   * Sets the value of the 'accBytes' field.
   * @param value the value to set.
   */
  public void setAccBytes(java.lang.Long value) {
    this.accBytes = value;
  }

  /**
   * Gets the value of the 'accTime' field.
   */
  public java.lang.Long getAccTime() {
    return accTime;
  }

  /**
   * Sets the value of the 'accTime' field.
   * @param value the value to set.
   */
  public void setAccTime(java.lang.Long value) {
    this.accTime = value;
  }

  /**
   * Gets the value of the 'avgSpeed' field.
   */
  public java.lang.Long getAvgSpeed() {
    return avgSpeed;
  }

  /**
   * Sets the value of the 'avgSpeed' field.
   * @param value the value to set.
   */
  public void setAvgSpeed(java.lang.Long value) {
    this.avgSpeed = value;
  }

  /**
   * Gets the value of the 'speed' field.
   */
  public java.lang.Long getSpeed() {
    return speed;
  }

  /**
   * Sets the value of the 'speed' field.
   * @param value the value to set.
   */
  public void setSpeed(java.lang.Long value) {
    this.speed = value;
  }

  /**
   * Gets the value of the 'RTT' field.
   */
  public java.lang.Long getRTT() {
    return RTT;
  }

  /**
   * Sets the value of the 'RTT' field.
   * @param value the value to set.
   */
  public void setRTT(java.lang.Long value) {
    this.RTT = value;
  }

  /**
   * Gets the value of the 'nodeID' field.
   */
  public java.lang.Long getNodeID() {
    return nodeID;
  }

  /**
   * Sets the value of the 'nodeID' field.
   * @param value the value to set.
   */
  public void setNodeID(java.lang.Long value) {
    this.nodeID = value;
  }

  /** Creates a new OrderPlayAliveReqSrvV3 RecordBuilder */
  public static com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder newBuilder() {
    return new com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder();
  }
  
  /** Creates a new OrderPlayAliveReqSrvV3 RecordBuilder by copying an existing Builder */
  public static com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder newBuilder(com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder other) {
    return new com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder(other);
  }
  
  /** Creates a new OrderPlayAliveReqSrvV3 RecordBuilder by copying an existing OrderPlayAliveReqSrvV3 instance */
  public static com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder newBuilder(com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3 other) {
    return new com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder(other);
  }
  
  /**
   * RecordBuilder for OrderPlayAliveReqSrvV3 instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderPlayAliveReqSrvV3>
    implements org.apache.avro.data.RecordBuilder<OrderPlayAliveReqSrvV3> {

    private java.lang.Long srvIP;
    private java.lang.Long connTimes;
    private java.lang.Long transNum;
    private java.lang.Long avgRTT;
    private java.lang.Long accBytes;
    private java.lang.Long accTime;
    private java.lang.Long avgSpeed;
    private java.lang.Long speed;
    private java.lang.Long RTT;
    private java.lang.Long nodeID;

    /** Creates a new Builder */
    private Builder() {
      super(com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.srvIP)) {
        this.srvIP = data().deepCopy(fields()[0].schema(), other.srvIP);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.connTimes)) {
        this.connTimes = data().deepCopy(fields()[1].schema(), other.connTimes);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.transNum)) {
        this.transNum = data().deepCopy(fields()[2].schema(), other.transNum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.avgRTT)) {
        this.avgRTT = data().deepCopy(fields()[3].schema(), other.avgRTT);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.accBytes)) {
        this.accBytes = data().deepCopy(fields()[4].schema(), other.accBytes);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.accTime)) {
        this.accTime = data().deepCopy(fields()[5].schema(), other.accTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.avgSpeed)) {
        this.avgSpeed = data().deepCopy(fields()[6].schema(), other.avgSpeed);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.speed)) {
        this.speed = data().deepCopy(fields()[7].schema(), other.speed);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.RTT)) {
        this.RTT = data().deepCopy(fields()[8].schema(), other.RTT);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.nodeID)) {
        this.nodeID = data().deepCopy(fields()[9].schema(), other.nodeID);
        fieldSetFlags()[9] = true;
      }
    }
    
    /** Creates a Builder by copying an existing OrderPlayAliveReqSrvV3 instance */
    private Builder(com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3 other) {
            super(com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.SCHEMA$);
      if (isValidValue(fields()[0], other.srvIP)) {
        this.srvIP = data().deepCopy(fields()[0].schema(), other.srvIP);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.connTimes)) {
        this.connTimes = data().deepCopy(fields()[1].schema(), other.connTimes);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.transNum)) {
        this.transNum = data().deepCopy(fields()[2].schema(), other.transNum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.avgRTT)) {
        this.avgRTT = data().deepCopy(fields()[3].schema(), other.avgRTT);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.accBytes)) {
        this.accBytes = data().deepCopy(fields()[4].schema(), other.accBytes);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.accTime)) {
        this.accTime = data().deepCopy(fields()[5].schema(), other.accTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.avgSpeed)) {
        this.avgSpeed = data().deepCopy(fields()[6].schema(), other.avgSpeed);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.speed)) {
        this.speed = data().deepCopy(fields()[7].schema(), other.speed);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.RTT)) {
        this.RTT = data().deepCopy(fields()[8].schema(), other.RTT);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.nodeID)) {
        this.nodeID = data().deepCopy(fields()[9].schema(), other.nodeID);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'srvIP' field */
    public java.lang.Long getSrvIP() {
      return srvIP;
    }
    
    /** Sets the value of the 'srvIP' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder setSrvIP(java.lang.Long value) {
      validate(fields()[0], value);
      this.srvIP = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'srvIP' field has been set */
    public boolean hasSrvIP() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'srvIP' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder clearSrvIP() {
      srvIP = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'connTimes' field */
    public java.lang.Long getConnTimes() {
      return connTimes;
    }
    
    /** Sets the value of the 'connTimes' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder setConnTimes(java.lang.Long value) {
      validate(fields()[1], value);
      this.connTimes = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'connTimes' field has been set */
    public boolean hasConnTimes() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'connTimes' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder clearConnTimes() {
      connTimes = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'transNum' field */
    public java.lang.Long getTransNum() {
      return transNum;
    }
    
    /** Sets the value of the 'transNum' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder setTransNum(java.lang.Long value) {
      validate(fields()[2], value);
      this.transNum = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'transNum' field has been set */
    public boolean hasTransNum() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'transNum' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder clearTransNum() {
      transNum = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'avgRTT' field */
    public java.lang.Long getAvgRTT() {
      return avgRTT;
    }
    
    /** Sets the value of the 'avgRTT' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder setAvgRTT(java.lang.Long value) {
      validate(fields()[3], value);
      this.avgRTT = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'avgRTT' field has been set */
    public boolean hasAvgRTT() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'avgRTT' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder clearAvgRTT() {
      avgRTT = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'accBytes' field */
    public java.lang.Long getAccBytes() {
      return accBytes;
    }
    
    /** Sets the value of the 'accBytes' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder setAccBytes(java.lang.Long value) {
      validate(fields()[4], value);
      this.accBytes = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'accBytes' field has been set */
    public boolean hasAccBytes() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'accBytes' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder clearAccBytes() {
      accBytes = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'accTime' field */
    public java.lang.Long getAccTime() {
      return accTime;
    }
    
    /** Sets the value of the 'accTime' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder setAccTime(java.lang.Long value) {
      validate(fields()[5], value);
      this.accTime = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'accTime' field has been set */
    public boolean hasAccTime() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'accTime' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder clearAccTime() {
      accTime = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'avgSpeed' field */
    public java.lang.Long getAvgSpeed() {
      return avgSpeed;
    }
    
    /** Sets the value of the 'avgSpeed' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder setAvgSpeed(java.lang.Long value) {
      validate(fields()[6], value);
      this.avgSpeed = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'avgSpeed' field has been set */
    public boolean hasAvgSpeed() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'avgSpeed' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder clearAvgSpeed() {
      avgSpeed = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'speed' field */
    public java.lang.Long getSpeed() {
      return speed;
    }
    
    /** Sets the value of the 'speed' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder setSpeed(java.lang.Long value) {
      validate(fields()[7], value);
      this.speed = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'speed' field has been set */
    public boolean hasSpeed() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'speed' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder clearSpeed() {
      speed = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'RTT' field */
    public java.lang.Long getRTT() {
      return RTT;
    }
    
    /** Sets the value of the 'RTT' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder setRTT(java.lang.Long value) {
      validate(fields()[8], value);
      this.RTT = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'RTT' field has been set */
    public boolean hasRTT() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'RTT' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder clearRTT() {
      RTT = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'nodeID' field */
    public java.lang.Long getNodeID() {
      return nodeID;
    }
    
    /** Sets the value of the 'nodeID' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder setNodeID(java.lang.Long value) {
      validate(fields()[9], value);
      this.nodeID = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'nodeID' field has been set */
    public boolean hasNodeID() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'nodeID' field */
    public com.voole.hobbit2.kafka.avro.order.OrderPlayAliveReqSrvV3.Builder clearNodeID() {
      nodeID = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public OrderPlayAliveReqSrvV3 build() {
      try {
        OrderPlayAliveReqSrvV3 record = new OrderPlayAliveReqSrvV3();
        record.srvIP = fieldSetFlags()[0] ? this.srvIP : (java.lang.Long) defaultValue(fields()[0]);
        record.connTimes = fieldSetFlags()[1] ? this.connTimes : (java.lang.Long) defaultValue(fields()[1]);
        record.transNum = fieldSetFlags()[2] ? this.transNum : (java.lang.Long) defaultValue(fields()[2]);
        record.avgRTT = fieldSetFlags()[3] ? this.avgRTT : (java.lang.Long) defaultValue(fields()[3]);
        record.accBytes = fieldSetFlags()[4] ? this.accBytes : (java.lang.Long) defaultValue(fields()[4]);
        record.accTime = fieldSetFlags()[5] ? this.accTime : (java.lang.Long) defaultValue(fields()[5]);
        record.avgSpeed = fieldSetFlags()[6] ? this.avgSpeed : (java.lang.Long) defaultValue(fields()[6]);
        record.speed = fieldSetFlags()[7] ? this.speed : (java.lang.Long) defaultValue(fields()[7]);
        record.RTT = fieldSetFlags()[8] ? this.RTT : (java.lang.Long) defaultValue(fields()[8]);
        record.nodeID = fieldSetFlags()[9] ? this.nodeID : (java.lang.Long) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}

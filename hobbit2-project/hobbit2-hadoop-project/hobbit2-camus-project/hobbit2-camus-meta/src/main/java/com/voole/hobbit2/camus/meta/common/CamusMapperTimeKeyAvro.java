/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.voole.hobbit2.camus.meta.common;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class CamusMapperTimeKeyAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CamusMapperTimeKeyAvro\",\"namespace\":\"com.voole.hobbit2.camus.meta.common\",\"fields\":[{\"name\":\"topic\",\"type\":[\"string\",\"null\"]},{\"name\":\"categoryTime\",\"type\":[\"long\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence topic;
  @Deprecated public java.lang.Long categoryTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public CamusMapperTimeKeyAvro() {}

  /**
   * All-args constructor.
   */
  public CamusMapperTimeKeyAvro(java.lang.CharSequence topic, java.lang.Long categoryTime) {
    this.topic = topic;
    this.categoryTime = categoryTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return topic;
    case 1: return categoryTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: topic = (java.lang.CharSequence)value$; break;
    case 1: categoryTime = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'topic' field.
   */
  public java.lang.CharSequence getTopic() {
    return topic;
  }

  /**
   * Sets the value of the 'topic' field.
   * @param value the value to set.
   */
  public void setTopic(java.lang.CharSequence value) {
    this.topic = value;
  }

  /**
   * Gets the value of the 'categoryTime' field.
   */
  public java.lang.Long getCategoryTime() {
    return categoryTime;
  }

  /**
   * Sets the value of the 'categoryTime' field.
   * @param value the value to set.
   */
  public void setCategoryTime(java.lang.Long value) {
    this.categoryTime = value;
  }

  /** Creates a new CamusMapperTimeKeyAvro RecordBuilder */
  public static com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder newBuilder() {
    return new com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder();
  }
  
  /** Creates a new CamusMapperTimeKeyAvro RecordBuilder by copying an existing Builder */
  public static com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder newBuilder(com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder other) {
    return new com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder(other);
  }
  
  /** Creates a new CamusMapperTimeKeyAvro RecordBuilder by copying an existing CamusMapperTimeKeyAvro instance */
  public static com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder newBuilder(com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro other) {
    return new com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder(other);
  }
  
  /**
   * RecordBuilder for CamusMapperTimeKeyAvro instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CamusMapperTimeKeyAvro>
    implements org.apache.avro.data.RecordBuilder<CamusMapperTimeKeyAvro> {

    private java.lang.CharSequence topic;
    private java.lang.Long categoryTime;

    /** Creates a new Builder */
    private Builder() {
      super(com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.topic)) {
        this.topic = data().deepCopy(fields()[0].schema(), other.topic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.categoryTime)) {
        this.categoryTime = data().deepCopy(fields()[1].schema(), other.categoryTime);
        fieldSetFlags()[1] = true;
      }
    }
    
    /** Creates a Builder by copying an existing CamusMapperTimeKeyAvro instance */
    private Builder(com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro other) {
            super(com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.SCHEMA$);
      if (isValidValue(fields()[0], other.topic)) {
        this.topic = data().deepCopy(fields()[0].schema(), other.topic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.categoryTime)) {
        this.categoryTime = data().deepCopy(fields()[1].schema(), other.categoryTime);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'topic' field */
    public java.lang.CharSequence getTopic() {
      return topic;
    }
    
    /** Sets the value of the 'topic' field */
    public com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder setTopic(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.topic = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'topic' field has been set */
    public boolean hasTopic() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'topic' field */
    public com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder clearTopic() {
      topic = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'categoryTime' field */
    public java.lang.Long getCategoryTime() {
      return categoryTime;
    }
    
    /** Sets the value of the 'categoryTime' field */
    public com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder setCategoryTime(java.lang.Long value) {
      validate(fields()[1], value);
      this.categoryTime = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'categoryTime' field has been set */
    public boolean hasCategoryTime() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'categoryTime' field */
    public com.voole.hobbit2.camus.meta.common.CamusMapperTimeKeyAvro.Builder clearCategoryTime() {
      categoryTime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public CamusMapperTimeKeyAvro build() {
      try {
        CamusMapperTimeKeyAvro record = new CamusMapperTimeKeyAvro();
        record.topic = fieldSetFlags()[0] ? this.topic : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.categoryTime = fieldSetFlags()[1] ? this.categoryTime : (java.lang.Long) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}

/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.voole.dungbeetle.ad.record.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class InterfacePlayLogDry extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"InterfacePlayLogDry\",\"namespace\":\"com.voole.dungbeetle.ad.record.avro\",\"fields\":[{\"name\":\"sessionid\",\"type\":[\"string\",\"null\"]},{\"name\":\"starttime\",\"type\":[\"long\",\"null\"]},{\"name\":\"lastalivetime\",\"type\":[\"long\",\"null\"]},{\"name\":\"endtime\",\"type\":[\"long\",\"null\"]},{\"name\":\"epgid\",\"type\":[\"string\",\"null\"]},{\"name\":\"spid\",\"type\":[\"string\",\"null\"]},{\"name\":\"oemid\",\"type\":[\"string\",\"null\"]},{\"name\":\"hid\",\"type\":[\"string\",\"null\"]},{\"name\":\"speed\",\"type\":[\"string\",\"null\"]},{\"name\":\"playurl\",\"type\":[\"string\",\"null\"]},{\"name\":\"ip\",\"type\":[\"long\",\"null\"]},{\"name\":\"area\",\"type\":[\"string\",\"null\"]},{\"name\":\"sectionid\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence sessionid;
  @Deprecated public java.lang.Long starttime;
  @Deprecated public java.lang.Long lastalivetime;
  @Deprecated public java.lang.Long endtime;
  @Deprecated public java.lang.CharSequence epgid;
  @Deprecated public java.lang.CharSequence spid;
  @Deprecated public java.lang.CharSequence oemid;
  @Deprecated public java.lang.CharSequence hid;
  @Deprecated public java.lang.CharSequence speed;
  @Deprecated public java.lang.CharSequence playurl;
  @Deprecated public java.lang.Long ip;
  @Deprecated public java.lang.CharSequence area;
  @Deprecated public java.lang.CharSequence sectionid;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public InterfacePlayLogDry() {}

  /**
   * All-args constructor.
   */
  public InterfacePlayLogDry(java.lang.CharSequence sessionid, java.lang.Long starttime, java.lang.Long lastalivetime, java.lang.Long endtime, java.lang.CharSequence epgid, java.lang.CharSequence spid, java.lang.CharSequence oemid, java.lang.CharSequence hid, java.lang.CharSequence speed, java.lang.CharSequence playurl, java.lang.Long ip, java.lang.CharSequence area, java.lang.CharSequence sectionid) {
    this.sessionid = sessionid;
    this.starttime = starttime;
    this.lastalivetime = lastalivetime;
    this.endtime = endtime;
    this.epgid = epgid;
    this.spid = spid;
    this.oemid = oemid;
    this.hid = hid;
    this.speed = speed;
    this.playurl = playurl;
    this.ip = ip;
    this.area = area;
    this.sectionid = sectionid;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sessionid;
    case 1: return starttime;
    case 2: return lastalivetime;
    case 3: return endtime;
    case 4: return epgid;
    case 5: return spid;
    case 6: return oemid;
    case 7: return hid;
    case 8: return speed;
    case 9: return playurl;
    case 10: return ip;
    case 11: return area;
    case 12: return sectionid;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sessionid = (java.lang.CharSequence)value$; break;
    case 1: starttime = (java.lang.Long)value$; break;
    case 2: lastalivetime = (java.lang.Long)value$; break;
    case 3: endtime = (java.lang.Long)value$; break;
    case 4: epgid = (java.lang.CharSequence)value$; break;
    case 5: spid = (java.lang.CharSequence)value$; break;
    case 6: oemid = (java.lang.CharSequence)value$; break;
    case 7: hid = (java.lang.CharSequence)value$; break;
    case 8: speed = (java.lang.CharSequence)value$; break;
    case 9: playurl = (java.lang.CharSequence)value$; break;
    case 10: ip = (java.lang.Long)value$; break;
    case 11: area = (java.lang.CharSequence)value$; break;
    case 12: sectionid = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sessionid' field.
   */
  public java.lang.CharSequence getSessionid() {
    return sessionid;
  }

  /**
   * Sets the value of the 'sessionid' field.
   * @param value the value to set.
   */
  public void setSessionid(java.lang.CharSequence value) {
    this.sessionid = value;
  }

  /**
   * Gets the value of the 'starttime' field.
   */
  public java.lang.Long getStarttime() {
    return starttime;
  }

  /**
   * Sets the value of the 'starttime' field.
   * @param value the value to set.
   */
  public void setStarttime(java.lang.Long value) {
    this.starttime = value;
  }

  /**
   * Gets the value of the 'lastalivetime' field.
   */
  public java.lang.Long getLastalivetime() {
    return lastalivetime;
  }

  /**
   * Sets the value of the 'lastalivetime' field.
   * @param value the value to set.
   */
  public void setLastalivetime(java.lang.Long value) {
    this.lastalivetime = value;
  }

  /**
   * Gets the value of the 'endtime' field.
   */
  public java.lang.Long getEndtime() {
    return endtime;
  }

  /**
   * Sets the value of the 'endtime' field.
   * @param value the value to set.
   */
  public void setEndtime(java.lang.Long value) {
    this.endtime = value;
  }

  /**
   * Gets the value of the 'epgid' field.
   */
  public java.lang.CharSequence getEpgid() {
    return epgid;
  }

  /**
   * Sets the value of the 'epgid' field.
   * @param value the value to set.
   */
  public void setEpgid(java.lang.CharSequence value) {
    this.epgid = value;
  }

  /**
   * Gets the value of the 'spid' field.
   */
  public java.lang.CharSequence getSpid() {
    return spid;
  }

  /**
   * Sets the value of the 'spid' field.
   * @param value the value to set.
   */
  public void setSpid(java.lang.CharSequence value) {
    this.spid = value;
  }

  /**
   * Gets the value of the 'oemid' field.
   */
  public java.lang.CharSequence getOemid() {
    return oemid;
  }

  /**
   * Sets the value of the 'oemid' field.
   * @param value the value to set.
   */
  public void setOemid(java.lang.CharSequence value) {
    this.oemid = value;
  }

  /**
   * Gets the value of the 'hid' field.
   */
  public java.lang.CharSequence getHid() {
    return hid;
  }

  /**
   * Sets the value of the 'hid' field.
   * @param value the value to set.
   */
  public void setHid(java.lang.CharSequence value) {
    this.hid = value;
  }

  /**
   * Gets the value of the 'speed' field.
   */
  public java.lang.CharSequence getSpeed() {
    return speed;
  }

  /**
   * Sets the value of the 'speed' field.
   * @param value the value to set.
   */
  public void setSpeed(java.lang.CharSequence value) {
    this.speed = value;
  }

  /**
   * Gets the value of the 'playurl' field.
   */
  public java.lang.CharSequence getPlayurl() {
    return playurl;
  }

  /**
   * Sets the value of the 'playurl' field.
   * @param value the value to set.
   */
  public void setPlayurl(java.lang.CharSequence value) {
    this.playurl = value;
  }

  /**
   * Gets the value of the 'ip' field.
   */
  public java.lang.Long getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(java.lang.Long value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'area' field.
   */
  public java.lang.CharSequence getArea() {
    return area;
  }

  /**
   * Sets the value of the 'area' field.
   * @param value the value to set.
   */
  public void setArea(java.lang.CharSequence value) {
    this.area = value;
  }

  /**
   * Gets the value of the 'sectionid' field.
   */
  public java.lang.CharSequence getSectionid() {
    return sectionid;
  }

  /**
   * Sets the value of the 'sectionid' field.
   * @param value the value to set.
   */
  public void setSectionid(java.lang.CharSequence value) {
    this.sectionid = value;
  }

  /** Creates a new InterfacePlayLogDry RecordBuilder */
  public static com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder newBuilder() {
    return new com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder();
  }
  
  /** Creates a new InterfacePlayLogDry RecordBuilder by copying an existing Builder */
  public static com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder newBuilder(com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder other) {
    return new com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder(other);
  }
  
  /** Creates a new InterfacePlayLogDry RecordBuilder by copying an existing InterfacePlayLogDry instance */
  public static com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder newBuilder(com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry other) {
    return new com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder(other);
  }
  
  /**
   * RecordBuilder for InterfacePlayLogDry instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<InterfacePlayLogDry>
    implements org.apache.avro.data.RecordBuilder<InterfacePlayLogDry> {

    private java.lang.CharSequence sessionid;
    private java.lang.Long starttime;
    private java.lang.Long lastalivetime;
    private java.lang.Long endtime;
    private java.lang.CharSequence epgid;
    private java.lang.CharSequence spid;
    private java.lang.CharSequence oemid;
    private java.lang.CharSequence hid;
    private java.lang.CharSequence speed;
    private java.lang.CharSequence playurl;
    private java.lang.Long ip;
    private java.lang.CharSequence area;
    private java.lang.CharSequence sectionid;

    /** Creates a new Builder */
    private Builder() {
      super(com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sessionid)) {
        this.sessionid = data().deepCopy(fields()[0].schema(), other.sessionid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.starttime)) {
        this.starttime = data().deepCopy(fields()[1].schema(), other.starttime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastalivetime)) {
        this.lastalivetime = data().deepCopy(fields()[2].schema(), other.lastalivetime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.endtime)) {
        this.endtime = data().deepCopy(fields()[3].schema(), other.endtime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.epgid)) {
        this.epgid = data().deepCopy(fields()[4].schema(), other.epgid);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.spid)) {
        this.spid = data().deepCopy(fields()[5].schema(), other.spid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.oemid)) {
        this.oemid = data().deepCopy(fields()[6].schema(), other.oemid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.hid)) {
        this.hid = data().deepCopy(fields()[7].schema(), other.hid);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.speed)) {
        this.speed = data().deepCopy(fields()[8].schema(), other.speed);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.playurl)) {
        this.playurl = data().deepCopy(fields()[9].schema(), other.playurl);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ip)) {
        this.ip = data().deepCopy(fields()[10].schema(), other.ip);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.area)) {
        this.area = data().deepCopy(fields()[11].schema(), other.area);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.sectionid)) {
        this.sectionid = data().deepCopy(fields()[12].schema(), other.sectionid);
        fieldSetFlags()[12] = true;
      }
    }
    
    /** Creates a Builder by copying an existing InterfacePlayLogDry instance */
    private Builder(com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry other) {
            super(com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.SCHEMA$);
      if (isValidValue(fields()[0], other.sessionid)) {
        this.sessionid = data().deepCopy(fields()[0].schema(), other.sessionid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.starttime)) {
        this.starttime = data().deepCopy(fields()[1].schema(), other.starttime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastalivetime)) {
        this.lastalivetime = data().deepCopy(fields()[2].schema(), other.lastalivetime);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.endtime)) {
        this.endtime = data().deepCopy(fields()[3].schema(), other.endtime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.epgid)) {
        this.epgid = data().deepCopy(fields()[4].schema(), other.epgid);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.spid)) {
        this.spid = data().deepCopy(fields()[5].schema(), other.spid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.oemid)) {
        this.oemid = data().deepCopy(fields()[6].schema(), other.oemid);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.hid)) {
        this.hid = data().deepCopy(fields()[7].schema(), other.hid);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.speed)) {
        this.speed = data().deepCopy(fields()[8].schema(), other.speed);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.playurl)) {
        this.playurl = data().deepCopy(fields()[9].schema(), other.playurl);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ip)) {
        this.ip = data().deepCopy(fields()[10].schema(), other.ip);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.area)) {
        this.area = data().deepCopy(fields()[11].schema(), other.area);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.sectionid)) {
        this.sectionid = data().deepCopy(fields()[12].schema(), other.sectionid);
        fieldSetFlags()[12] = true;
      }
    }

    /** Gets the value of the 'sessionid' field */
    public java.lang.CharSequence getSessionid() {
      return sessionid;
    }
    
    /** Sets the value of the 'sessionid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setSessionid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.sessionid = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'sessionid' field has been set */
    public boolean hasSessionid() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'sessionid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearSessionid() {
      sessionid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'starttime' field */
    public java.lang.Long getStarttime() {
      return starttime;
    }
    
    /** Sets the value of the 'starttime' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setStarttime(java.lang.Long value) {
      validate(fields()[1], value);
      this.starttime = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'starttime' field has been set */
    public boolean hasStarttime() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'starttime' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearStarttime() {
      starttime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'lastalivetime' field */
    public java.lang.Long getLastalivetime() {
      return lastalivetime;
    }
    
    /** Sets the value of the 'lastalivetime' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setLastalivetime(java.lang.Long value) {
      validate(fields()[2], value);
      this.lastalivetime = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'lastalivetime' field has been set */
    public boolean hasLastalivetime() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'lastalivetime' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearLastalivetime() {
      lastalivetime = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'endtime' field */
    public java.lang.Long getEndtime() {
      return endtime;
    }
    
    /** Sets the value of the 'endtime' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setEndtime(java.lang.Long value) {
      validate(fields()[3], value);
      this.endtime = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'endtime' field has been set */
    public boolean hasEndtime() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'endtime' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearEndtime() {
      endtime = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'epgid' field */
    public java.lang.CharSequence getEpgid() {
      return epgid;
    }
    
    /** Sets the value of the 'epgid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setEpgid(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.epgid = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'epgid' field has been set */
    public boolean hasEpgid() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'epgid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearEpgid() {
      epgid = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'spid' field */
    public java.lang.CharSequence getSpid() {
      return spid;
    }
    
    /** Sets the value of the 'spid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setSpid(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.spid = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'spid' field has been set */
    public boolean hasSpid() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'spid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearSpid() {
      spid = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'oemid' field */
    public java.lang.CharSequence getOemid() {
      return oemid;
    }
    
    /** Sets the value of the 'oemid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setOemid(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.oemid = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'oemid' field has been set */
    public boolean hasOemid() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'oemid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearOemid() {
      oemid = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'hid' field */
    public java.lang.CharSequence getHid() {
      return hid;
    }
    
    /** Sets the value of the 'hid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setHid(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.hid = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'hid' field has been set */
    public boolean hasHid() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'hid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearHid() {
      hid = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'speed' field */
    public java.lang.CharSequence getSpeed() {
      return speed;
    }
    
    /** Sets the value of the 'speed' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setSpeed(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.speed = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'speed' field has been set */
    public boolean hasSpeed() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'speed' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearSpeed() {
      speed = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'playurl' field */
    public java.lang.CharSequence getPlayurl() {
      return playurl;
    }
    
    /** Sets the value of the 'playurl' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setPlayurl(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.playurl = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'playurl' field has been set */
    public boolean hasPlayurl() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'playurl' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearPlayurl() {
      playurl = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'ip' field */
    public java.lang.Long getIp() {
      return ip;
    }
    
    /** Sets the value of the 'ip' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setIp(java.lang.Long value) {
      validate(fields()[10], value);
      this.ip = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'ip' field has been set */
    public boolean hasIp() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'ip' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearIp() {
      ip = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'area' field */
    public java.lang.CharSequence getArea() {
      return area;
    }
    
    /** Sets the value of the 'area' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setArea(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.area = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'area' field has been set */
    public boolean hasArea() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'area' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearArea() {
      area = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'sectionid' field */
    public java.lang.CharSequence getSectionid() {
      return sectionid;
    }
    
    /** Sets the value of the 'sectionid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder setSectionid(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.sectionid = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'sectionid' field has been set */
    public boolean hasSectionid() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'sectionid' field */
    public com.voole.dungbeetle.ad.record.avro.InterfacePlayLogDry.Builder clearSectionid() {
      sectionid = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    public InterfacePlayLogDry build() {
      try {
        InterfacePlayLogDry record = new InterfacePlayLogDry();
        record.sessionid = fieldSetFlags()[0] ? this.sessionid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.starttime = fieldSetFlags()[1] ? this.starttime : (java.lang.Long) defaultValue(fields()[1]);
        record.lastalivetime = fieldSetFlags()[2] ? this.lastalivetime : (java.lang.Long) defaultValue(fields()[2]);
        record.endtime = fieldSetFlags()[3] ? this.endtime : (java.lang.Long) defaultValue(fields()[3]);
        record.epgid = fieldSetFlags()[4] ? this.epgid : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.spid = fieldSetFlags()[5] ? this.spid : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.oemid = fieldSetFlags()[6] ? this.oemid : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.hid = fieldSetFlags()[7] ? this.hid : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.speed = fieldSetFlags()[8] ? this.speed : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.playurl = fieldSetFlags()[9] ? this.playurl : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.ip = fieldSetFlags()[10] ? this.ip : (java.lang.Long) defaultValue(fields()[10]);
        record.area = fieldSetFlags()[11] ? this.area : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.sectionid = fieldSetFlags()[12] ? this.sectionid : (java.lang.CharSequence) defaultValue(fields()[12]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}

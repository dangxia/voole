// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/resources/proto/LivePB.proto

package com.voole.hobbit.proto;

public final class LivePB {
  private LivePB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface LiveVlsServerStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 vlsId = 1;
    /**
     * <code>optional uint64 vlsId = 1;</code>
     */
    boolean hasVlsId();
    /**
     * <code>optional uint64 vlsId = 1;</code>
     */
    long getVlsId();

    // optional uint32 vlsType = 2;
    /**
     * <code>optional uint32 vlsType = 2;</code>
     */
    boolean hasVlsType();
    /**
     * <code>optional uint32 vlsType = 2;</code>
     */
    int getVlsType();

    // optional uint32 vlsStatus = 3;
    /**
     * <code>optional uint32 vlsStatus = 3;</code>
     */
    boolean hasVlsStatus();
    /**
     * <code>optional uint32 vlsStatus = 3;</code>
     */
    int getVlsStatus();

    // optional string vlsDescription = 4;
    /**
     * <code>optional string vlsDescription = 4;</code>
     */
    boolean hasVlsDescription();
    /**
     * <code>optional string vlsDescription = 4;</code>
     */
    java.lang.String getVlsDescription();
    /**
     * <code>optional string vlsDescription = 4;</code>
     */
    com.google.protobuf.ByteString
        getVlsDescriptionBytes();

    // optional uint64 vlsIp = 5;
    /**
     * <code>optional uint64 vlsIp = 5;</code>
     */
    boolean hasVlsIp();
    /**
     * <code>optional uint64 vlsIp = 5;</code>
     */
    long getVlsIp();

    // optional uint32 vlsHttpPort = 6;
    /**
     * <code>optional uint32 vlsHttpPort = 6;</code>
     */
    boolean hasVlsHttpPort();
    /**
     * <code>optional uint32 vlsHttpPort = 6;</code>
     */
    int getVlsHttpPort();

    // optional uint32 vlsLivePort = 7;
    /**
     * <code>optional uint32 vlsLivePort = 7;</code>
     */
    boolean hasVlsLivePort();
    /**
     * <code>optional uint32 vlsLivePort = 7;</code>
     */
    int getVlsLivePort();

    // optional uint64 vlsStartTime = 8;
    /**
     * <code>optional uint64 vlsStartTime = 8;</code>
     */
    boolean hasVlsStartTime();
    /**
     * <code>optional uint64 vlsStartTime = 8;</code>
     */
    long getVlsStartTime();

    // optional uint64 vlsAllClients = 9;
    /**
     * <code>optional uint64 vlsAllClients = 9;</code>
     */
    boolean hasVlsAllClients();
    /**
     * <code>optional uint64 vlsAllClients = 9;</code>
     */
    long getVlsAllClients();

    // optional uint64 vlsAllStreamBytes = 10;
    /**
     * <code>optional uint64 vlsAllStreamBytes = 10;</code>
     */
    boolean hasVlsAllStreamBytes();
    /**
     * <code>optional uint64 vlsAllStreamBytes = 10;</code>
     */
    long getVlsAllStreamBytes();

    // optional uint64 vlsDownloadRate = 11;
    /**
     * <code>optional uint64 vlsDownloadRate = 11;</code>
     */
    boolean hasVlsDownloadRate();
    /**
     * <code>optional uint64 vlsDownloadRate = 11;</code>
     */
    long getVlsDownloadRate();

    // optional uint64 vlsSendRate = 12;
    /**
     * <code>optional uint64 vlsSendRate = 12;</code>
     */
    boolean hasVlsSendRate();
    /**
     * <code>optional uint64 vlsSendRate = 12;</code>
     */
    long getVlsSendRate();

    // optional uint64 vlsEffectiveChannels = 13;
    /**
     * <code>optional uint64 vlsEffectiveChannels = 13;</code>
     */
    boolean hasVlsEffectiveChannels();
    /**
     * <code>optional uint64 vlsEffectiveChannels = 13;</code>
     */
    long getVlsEffectiveChannels();

    // repeated .LiveVlsServerStatusSrv attachments = 14;
    /**
     * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
     */
    java.util.List<com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv> 
        getAttachmentsList();
    /**
     * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
     */
    com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv getAttachments(int index);
    /**
     * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
     */
    int getAttachmentsCount();
    /**
     * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
     */
    java.util.List<? extends com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrvOrBuilder> 
        getAttachmentsOrBuilderList();
    /**
     * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
     */
    com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrvOrBuilder getAttachmentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code LiveVlsServerStatus}
   */
  public static final class LiveVlsServerStatus extends
      com.google.protobuf.GeneratedMessage
      implements LiveVlsServerStatusOrBuilder {
    // Use LiveVlsServerStatus.newBuilder() to construct.
    private LiveVlsServerStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiveVlsServerStatus(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiveVlsServerStatus defaultInstance;
    public static LiveVlsServerStatus getDefaultInstance() {
      return defaultInstance;
    }

    public LiveVlsServerStatus getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiveVlsServerStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              vlsId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              vlsType_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              vlsStatus_ = input.readUInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              vlsDescription_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              vlsIp_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              vlsHttpPort_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              vlsLivePort_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              vlsStartTime_ = input.readUInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              vlsAllClients_ = input.readUInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              vlsAllStreamBytes_ = input.readUInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              vlsDownloadRate_ = input.readUInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              vlsSendRate_ = input.readUInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              vlsEffectiveChannels_ = input.readUInt64();
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                attachments_ = new java.util.ArrayList<com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv>();
                mutable_bitField0_ |= 0x00002000;
              }
              attachments_.add(input.readMessage(com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          attachments_ = java.util.Collections.unmodifiableList(attachments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveVlsServerStatus_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveVlsServerStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.voole.hobbit.proto.LivePB.LiveVlsServerStatus.class, com.voole.hobbit.proto.LivePB.LiveVlsServerStatus.Builder.class);
    }

    public static com.google.protobuf.Parser<LiveVlsServerStatus> PARSER =
        new com.google.protobuf.AbstractParser<LiveVlsServerStatus>() {
      public LiveVlsServerStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiveVlsServerStatus(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiveVlsServerStatus> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 vlsId = 1;
    public static final int VLSID_FIELD_NUMBER = 1;
    private long vlsId_;
    /**
     * <code>optional uint64 vlsId = 1;</code>
     */
    public boolean hasVlsId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 vlsId = 1;</code>
     */
    public long getVlsId() {
      return vlsId_;
    }

    // optional uint32 vlsType = 2;
    public static final int VLSTYPE_FIELD_NUMBER = 2;
    private int vlsType_;
    /**
     * <code>optional uint32 vlsType = 2;</code>
     */
    public boolean hasVlsType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 vlsType = 2;</code>
     */
    public int getVlsType() {
      return vlsType_;
    }

    // optional uint32 vlsStatus = 3;
    public static final int VLSSTATUS_FIELD_NUMBER = 3;
    private int vlsStatus_;
    /**
     * <code>optional uint32 vlsStatus = 3;</code>
     */
    public boolean hasVlsStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 vlsStatus = 3;</code>
     */
    public int getVlsStatus() {
      return vlsStatus_;
    }

    // optional string vlsDescription = 4;
    public static final int VLSDESCRIPTION_FIELD_NUMBER = 4;
    private java.lang.Object vlsDescription_;
    /**
     * <code>optional string vlsDescription = 4;</code>
     */
    public boolean hasVlsDescription() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string vlsDescription = 4;</code>
     */
    public java.lang.String getVlsDescription() {
      java.lang.Object ref = vlsDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          vlsDescription_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string vlsDescription = 4;</code>
     */
    public com.google.protobuf.ByteString
        getVlsDescriptionBytes() {
      java.lang.Object ref = vlsDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        vlsDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint64 vlsIp = 5;
    public static final int VLSIP_FIELD_NUMBER = 5;
    private long vlsIp_;
    /**
     * <code>optional uint64 vlsIp = 5;</code>
     */
    public boolean hasVlsIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 vlsIp = 5;</code>
     */
    public long getVlsIp() {
      return vlsIp_;
    }

    // optional uint32 vlsHttpPort = 6;
    public static final int VLSHTTPPORT_FIELD_NUMBER = 6;
    private int vlsHttpPort_;
    /**
     * <code>optional uint32 vlsHttpPort = 6;</code>
     */
    public boolean hasVlsHttpPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 vlsHttpPort = 6;</code>
     */
    public int getVlsHttpPort() {
      return vlsHttpPort_;
    }

    // optional uint32 vlsLivePort = 7;
    public static final int VLSLIVEPORT_FIELD_NUMBER = 7;
    private int vlsLivePort_;
    /**
     * <code>optional uint32 vlsLivePort = 7;</code>
     */
    public boolean hasVlsLivePort() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 vlsLivePort = 7;</code>
     */
    public int getVlsLivePort() {
      return vlsLivePort_;
    }

    // optional uint64 vlsStartTime = 8;
    public static final int VLSSTARTTIME_FIELD_NUMBER = 8;
    private long vlsStartTime_;
    /**
     * <code>optional uint64 vlsStartTime = 8;</code>
     */
    public boolean hasVlsStartTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 vlsStartTime = 8;</code>
     */
    public long getVlsStartTime() {
      return vlsStartTime_;
    }

    // optional uint64 vlsAllClients = 9;
    public static final int VLSALLCLIENTS_FIELD_NUMBER = 9;
    private long vlsAllClients_;
    /**
     * <code>optional uint64 vlsAllClients = 9;</code>
     */
    public boolean hasVlsAllClients() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 vlsAllClients = 9;</code>
     */
    public long getVlsAllClients() {
      return vlsAllClients_;
    }

    // optional uint64 vlsAllStreamBytes = 10;
    public static final int VLSALLSTREAMBYTES_FIELD_NUMBER = 10;
    private long vlsAllStreamBytes_;
    /**
     * <code>optional uint64 vlsAllStreamBytes = 10;</code>
     */
    public boolean hasVlsAllStreamBytes() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint64 vlsAllStreamBytes = 10;</code>
     */
    public long getVlsAllStreamBytes() {
      return vlsAllStreamBytes_;
    }

    // optional uint64 vlsDownloadRate = 11;
    public static final int VLSDOWNLOADRATE_FIELD_NUMBER = 11;
    private long vlsDownloadRate_;
    /**
     * <code>optional uint64 vlsDownloadRate = 11;</code>
     */
    public boolean hasVlsDownloadRate() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint64 vlsDownloadRate = 11;</code>
     */
    public long getVlsDownloadRate() {
      return vlsDownloadRate_;
    }

    // optional uint64 vlsSendRate = 12;
    public static final int VLSSENDRATE_FIELD_NUMBER = 12;
    private long vlsSendRate_;
    /**
     * <code>optional uint64 vlsSendRate = 12;</code>
     */
    public boolean hasVlsSendRate() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint64 vlsSendRate = 12;</code>
     */
    public long getVlsSendRate() {
      return vlsSendRate_;
    }

    // optional uint64 vlsEffectiveChannels = 13;
    public static final int VLSEFFECTIVECHANNELS_FIELD_NUMBER = 13;
    private long vlsEffectiveChannels_;
    /**
     * <code>optional uint64 vlsEffectiveChannels = 13;</code>
     */
    public boolean hasVlsEffectiveChannels() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint64 vlsEffectiveChannels = 13;</code>
     */
    public long getVlsEffectiveChannels() {
      return vlsEffectiveChannels_;
    }

    // repeated .LiveVlsServerStatusSrv attachments = 14;
    public static final int ATTACHMENTS_FIELD_NUMBER = 14;
    private java.util.List<com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv> attachments_;
    /**
     * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
     */
    public java.util.List<com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv> getAttachmentsList() {
      return attachments_;
    }
    /**
     * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
     */
    public java.util.List<? extends com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrvOrBuilder> 
        getAttachmentsOrBuilderList() {
      return attachments_;
    }
    /**
     * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
     */
    public int getAttachmentsCount() {
      return attachments_.size();
    }
    /**
     * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
     */
    public com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv getAttachments(int index) {
      return attachments_.get(index);
    }
    /**
     * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
     */
    public com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrvOrBuilder getAttachmentsOrBuilder(
        int index) {
      return attachments_.get(index);
    }

    private void initFields() {
      vlsId_ = 0L;
      vlsType_ = 0;
      vlsStatus_ = 0;
      vlsDescription_ = "";
      vlsIp_ = 0L;
      vlsHttpPort_ = 0;
      vlsLivePort_ = 0;
      vlsStartTime_ = 0L;
      vlsAllClients_ = 0L;
      vlsAllStreamBytes_ = 0L;
      vlsDownloadRate_ = 0L;
      vlsSendRate_ = 0L;
      vlsEffectiveChannels_ = 0L;
      attachments_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, vlsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, vlsType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, vlsStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getVlsDescriptionBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, vlsIp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, vlsHttpPort_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, vlsLivePort_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, vlsStartTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(9, vlsAllClients_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt64(10, vlsAllStreamBytes_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt64(11, vlsDownloadRate_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt64(12, vlsSendRate_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt64(13, vlsEffectiveChannels_);
      }
      for (int i = 0; i < attachments_.size(); i++) {
        output.writeMessage(14, attachments_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, vlsId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, vlsType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, vlsStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getVlsDescriptionBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, vlsIp_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, vlsHttpPort_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, vlsLivePort_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, vlsStartTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, vlsAllClients_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, vlsAllStreamBytes_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, vlsDownloadRate_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(12, vlsSendRate_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, vlsEffectiveChannels_);
      }
      for (int i = 0; i < attachments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, attachments_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.voole.hobbit.proto.LivePB.LiveVlsServerStatus)) {
        return super.equals(obj);
      }
      com.voole.hobbit.proto.LivePB.LiveVlsServerStatus other = (com.voole.hobbit.proto.LivePB.LiveVlsServerStatus) obj;

      boolean result = true;
      result = result && (hasVlsId() == other.hasVlsId());
      if (hasVlsId()) {
        result = result && (getVlsId()
            == other.getVlsId());
      }
      result = result && (hasVlsType() == other.hasVlsType());
      if (hasVlsType()) {
        result = result && (getVlsType()
            == other.getVlsType());
      }
      result = result && (hasVlsStatus() == other.hasVlsStatus());
      if (hasVlsStatus()) {
        result = result && (getVlsStatus()
            == other.getVlsStatus());
      }
      result = result && (hasVlsDescription() == other.hasVlsDescription());
      if (hasVlsDescription()) {
        result = result && getVlsDescription()
            .equals(other.getVlsDescription());
      }
      result = result && (hasVlsIp() == other.hasVlsIp());
      if (hasVlsIp()) {
        result = result && (getVlsIp()
            == other.getVlsIp());
      }
      result = result && (hasVlsHttpPort() == other.hasVlsHttpPort());
      if (hasVlsHttpPort()) {
        result = result && (getVlsHttpPort()
            == other.getVlsHttpPort());
      }
      result = result && (hasVlsLivePort() == other.hasVlsLivePort());
      if (hasVlsLivePort()) {
        result = result && (getVlsLivePort()
            == other.getVlsLivePort());
      }
      result = result && (hasVlsStartTime() == other.hasVlsStartTime());
      if (hasVlsStartTime()) {
        result = result && (getVlsStartTime()
            == other.getVlsStartTime());
      }
      result = result && (hasVlsAllClients() == other.hasVlsAllClients());
      if (hasVlsAllClients()) {
        result = result && (getVlsAllClients()
            == other.getVlsAllClients());
      }
      result = result && (hasVlsAllStreamBytes() == other.hasVlsAllStreamBytes());
      if (hasVlsAllStreamBytes()) {
        result = result && (getVlsAllStreamBytes()
            == other.getVlsAllStreamBytes());
      }
      result = result && (hasVlsDownloadRate() == other.hasVlsDownloadRate());
      if (hasVlsDownloadRate()) {
        result = result && (getVlsDownloadRate()
            == other.getVlsDownloadRate());
      }
      result = result && (hasVlsSendRate() == other.hasVlsSendRate());
      if (hasVlsSendRate()) {
        result = result && (getVlsSendRate()
            == other.getVlsSendRate());
      }
      result = result && (hasVlsEffectiveChannels() == other.hasVlsEffectiveChannels());
      if (hasVlsEffectiveChannels()) {
        result = result && (getVlsEffectiveChannels()
            == other.getVlsEffectiveChannels());
      }
      result = result && getAttachmentsList()
          .equals(other.getAttachmentsList());
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    private int memoizedHashCode = 0;
    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasVlsId()) {
        hash = (37 * hash) + VLSID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getVlsId());
      }
      if (hasVlsType()) {
        hash = (37 * hash) + VLSTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getVlsType();
      }
      if (hasVlsStatus()) {
        hash = (37 * hash) + VLSSTATUS_FIELD_NUMBER;
        hash = (53 * hash) + getVlsStatus();
      }
      if (hasVlsDescription()) {
        hash = (37 * hash) + VLSDESCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getVlsDescription().hashCode();
      }
      if (hasVlsIp()) {
        hash = (37 * hash) + VLSIP_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getVlsIp());
      }
      if (hasVlsHttpPort()) {
        hash = (37 * hash) + VLSHTTPPORT_FIELD_NUMBER;
        hash = (53 * hash) + getVlsHttpPort();
      }
      if (hasVlsLivePort()) {
        hash = (37 * hash) + VLSLIVEPORT_FIELD_NUMBER;
        hash = (53 * hash) + getVlsLivePort();
      }
      if (hasVlsStartTime()) {
        hash = (37 * hash) + VLSSTARTTIME_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getVlsStartTime());
      }
      if (hasVlsAllClients()) {
        hash = (37 * hash) + VLSALLCLIENTS_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getVlsAllClients());
      }
      if (hasVlsAllStreamBytes()) {
        hash = (37 * hash) + VLSALLSTREAMBYTES_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getVlsAllStreamBytes());
      }
      if (hasVlsDownloadRate()) {
        hash = (37 * hash) + VLSDOWNLOADRATE_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getVlsDownloadRate());
      }
      if (hasVlsSendRate()) {
        hash = (37 * hash) + VLSSENDRATE_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getVlsSendRate());
      }
      if (hasVlsEffectiveChannels()) {
        hash = (37 * hash) + VLSEFFECTIVECHANNELS_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getVlsEffectiveChannels());
      }
      if (getAttachmentsCount() > 0) {
        hash = (37 * hash) + ATTACHMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getAttachmentsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.voole.hobbit.proto.LivePB.LiveVlsServerStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LiveVlsServerStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.voole.hobbit.proto.LivePB.LiveVlsServerStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveVlsServerStatus_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveVlsServerStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.voole.hobbit.proto.LivePB.LiveVlsServerStatus.class, com.voole.hobbit.proto.LivePB.LiveVlsServerStatus.Builder.class);
      }

      // Construct using com.voole.hobbit.proto.LivePB.LiveVlsServerStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAttachmentsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        vlsId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        vlsType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        vlsStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        vlsDescription_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        vlsIp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        vlsHttpPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        vlsLivePort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        vlsStartTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        vlsAllClients_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        vlsAllStreamBytes_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        vlsDownloadRate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        vlsSendRate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        vlsEffectiveChannels_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        if (attachmentsBuilder_ == null) {
          attachments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          attachmentsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveVlsServerStatus_descriptor;
      }

      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatus getDefaultInstanceForType() {
        return com.voole.hobbit.proto.LivePB.LiveVlsServerStatus.getDefaultInstance();
      }

      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatus build() {
        com.voole.hobbit.proto.LivePB.LiveVlsServerStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatus buildPartial() {
        com.voole.hobbit.proto.LivePB.LiveVlsServerStatus result = new com.voole.hobbit.proto.LivePB.LiveVlsServerStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.vlsId_ = vlsId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.vlsType_ = vlsType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.vlsStatus_ = vlsStatus_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.vlsDescription_ = vlsDescription_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.vlsIp_ = vlsIp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.vlsHttpPort_ = vlsHttpPort_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.vlsLivePort_ = vlsLivePort_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.vlsStartTime_ = vlsStartTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.vlsAllClients_ = vlsAllClients_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.vlsAllStreamBytes_ = vlsAllStreamBytes_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.vlsDownloadRate_ = vlsDownloadRate_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.vlsSendRate_ = vlsSendRate_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.vlsEffectiveChannels_ = vlsEffectiveChannels_;
        if (attachmentsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            attachments_ = java.util.Collections.unmodifiableList(attachments_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.attachments_ = attachments_;
        } else {
          result.attachments_ = attachmentsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.voole.hobbit.proto.LivePB.LiveVlsServerStatus) {
          return mergeFrom((com.voole.hobbit.proto.LivePB.LiveVlsServerStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.voole.hobbit.proto.LivePB.LiveVlsServerStatus other) {
        if (other == com.voole.hobbit.proto.LivePB.LiveVlsServerStatus.getDefaultInstance()) return this;
        if (other.hasVlsId()) {
          setVlsId(other.getVlsId());
        }
        if (other.hasVlsType()) {
          setVlsType(other.getVlsType());
        }
        if (other.hasVlsStatus()) {
          setVlsStatus(other.getVlsStatus());
        }
        if (other.hasVlsDescription()) {
          bitField0_ |= 0x00000008;
          vlsDescription_ = other.vlsDescription_;
          onChanged();
        }
        if (other.hasVlsIp()) {
          setVlsIp(other.getVlsIp());
        }
        if (other.hasVlsHttpPort()) {
          setVlsHttpPort(other.getVlsHttpPort());
        }
        if (other.hasVlsLivePort()) {
          setVlsLivePort(other.getVlsLivePort());
        }
        if (other.hasVlsStartTime()) {
          setVlsStartTime(other.getVlsStartTime());
        }
        if (other.hasVlsAllClients()) {
          setVlsAllClients(other.getVlsAllClients());
        }
        if (other.hasVlsAllStreamBytes()) {
          setVlsAllStreamBytes(other.getVlsAllStreamBytes());
        }
        if (other.hasVlsDownloadRate()) {
          setVlsDownloadRate(other.getVlsDownloadRate());
        }
        if (other.hasVlsSendRate()) {
          setVlsSendRate(other.getVlsSendRate());
        }
        if (other.hasVlsEffectiveChannels()) {
          setVlsEffectiveChannels(other.getVlsEffectiveChannels());
        }
        if (attachmentsBuilder_ == null) {
          if (!other.attachments_.isEmpty()) {
            if (attachments_.isEmpty()) {
              attachments_ = other.attachments_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureAttachmentsIsMutable();
              attachments_.addAll(other.attachments_);
            }
            onChanged();
          }
        } else {
          if (!other.attachments_.isEmpty()) {
            if (attachmentsBuilder_.isEmpty()) {
              attachmentsBuilder_.dispose();
              attachmentsBuilder_ = null;
              attachments_ = other.attachments_;
              bitField0_ = (bitField0_ & ~0x00002000);
              attachmentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAttachmentsFieldBuilder() : null;
            } else {
              attachmentsBuilder_.addAllMessages(other.attachments_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.voole.hobbit.proto.LivePB.LiveVlsServerStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.voole.hobbit.proto.LivePB.LiveVlsServerStatus) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 vlsId = 1;
      private long vlsId_ ;
      /**
       * <code>optional uint64 vlsId = 1;</code>
       */
      public boolean hasVlsId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 vlsId = 1;</code>
       */
      public long getVlsId() {
        return vlsId_;
      }
      /**
       * <code>optional uint64 vlsId = 1;</code>
       */
      public Builder setVlsId(long value) {
        bitField0_ |= 0x00000001;
        vlsId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 vlsId = 1;</code>
       */
      public Builder clearVlsId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        vlsId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 vlsType = 2;
      private int vlsType_ ;
      /**
       * <code>optional uint32 vlsType = 2;</code>
       */
      public boolean hasVlsType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 vlsType = 2;</code>
       */
      public int getVlsType() {
        return vlsType_;
      }
      /**
       * <code>optional uint32 vlsType = 2;</code>
       */
      public Builder setVlsType(int value) {
        bitField0_ |= 0x00000002;
        vlsType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 vlsType = 2;</code>
       */
      public Builder clearVlsType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        vlsType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 vlsStatus = 3;
      private int vlsStatus_ ;
      /**
       * <code>optional uint32 vlsStatus = 3;</code>
       */
      public boolean hasVlsStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 vlsStatus = 3;</code>
       */
      public int getVlsStatus() {
        return vlsStatus_;
      }
      /**
       * <code>optional uint32 vlsStatus = 3;</code>
       */
      public Builder setVlsStatus(int value) {
        bitField0_ |= 0x00000004;
        vlsStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 vlsStatus = 3;</code>
       */
      public Builder clearVlsStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        vlsStatus_ = 0;
        onChanged();
        return this;
      }

      // optional string vlsDescription = 4;
      private java.lang.Object vlsDescription_ = "";
      /**
       * <code>optional string vlsDescription = 4;</code>
       */
      public boolean hasVlsDescription() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string vlsDescription = 4;</code>
       */
      public java.lang.String getVlsDescription() {
        java.lang.Object ref = vlsDescription_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          vlsDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string vlsDescription = 4;</code>
       */
      public com.google.protobuf.ByteString
          getVlsDescriptionBytes() {
        java.lang.Object ref = vlsDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vlsDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string vlsDescription = 4;</code>
       */
      public Builder setVlsDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        vlsDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string vlsDescription = 4;</code>
       */
      public Builder clearVlsDescription() {
        bitField0_ = (bitField0_ & ~0x00000008);
        vlsDescription_ = getDefaultInstance().getVlsDescription();
        onChanged();
        return this;
      }
      /**
       * <code>optional string vlsDescription = 4;</code>
       */
      public Builder setVlsDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        vlsDescription_ = value;
        onChanged();
        return this;
      }

      // optional uint64 vlsIp = 5;
      private long vlsIp_ ;
      /**
       * <code>optional uint64 vlsIp = 5;</code>
       */
      public boolean hasVlsIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 vlsIp = 5;</code>
       */
      public long getVlsIp() {
        return vlsIp_;
      }
      /**
       * <code>optional uint64 vlsIp = 5;</code>
       */
      public Builder setVlsIp(long value) {
        bitField0_ |= 0x00000010;
        vlsIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 vlsIp = 5;</code>
       */
      public Builder clearVlsIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        vlsIp_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 vlsHttpPort = 6;
      private int vlsHttpPort_ ;
      /**
       * <code>optional uint32 vlsHttpPort = 6;</code>
       */
      public boolean hasVlsHttpPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 vlsHttpPort = 6;</code>
       */
      public int getVlsHttpPort() {
        return vlsHttpPort_;
      }
      /**
       * <code>optional uint32 vlsHttpPort = 6;</code>
       */
      public Builder setVlsHttpPort(int value) {
        bitField0_ |= 0x00000020;
        vlsHttpPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 vlsHttpPort = 6;</code>
       */
      public Builder clearVlsHttpPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vlsHttpPort_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 vlsLivePort = 7;
      private int vlsLivePort_ ;
      /**
       * <code>optional uint32 vlsLivePort = 7;</code>
       */
      public boolean hasVlsLivePort() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 vlsLivePort = 7;</code>
       */
      public int getVlsLivePort() {
        return vlsLivePort_;
      }
      /**
       * <code>optional uint32 vlsLivePort = 7;</code>
       */
      public Builder setVlsLivePort(int value) {
        bitField0_ |= 0x00000040;
        vlsLivePort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 vlsLivePort = 7;</code>
       */
      public Builder clearVlsLivePort() {
        bitField0_ = (bitField0_ & ~0x00000040);
        vlsLivePort_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 vlsStartTime = 8;
      private long vlsStartTime_ ;
      /**
       * <code>optional uint64 vlsStartTime = 8;</code>
       */
      public boolean hasVlsStartTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 vlsStartTime = 8;</code>
       */
      public long getVlsStartTime() {
        return vlsStartTime_;
      }
      /**
       * <code>optional uint64 vlsStartTime = 8;</code>
       */
      public Builder setVlsStartTime(long value) {
        bitField0_ |= 0x00000080;
        vlsStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 vlsStartTime = 8;</code>
       */
      public Builder clearVlsStartTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        vlsStartTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 vlsAllClients = 9;
      private long vlsAllClients_ ;
      /**
       * <code>optional uint64 vlsAllClients = 9;</code>
       */
      public boolean hasVlsAllClients() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 vlsAllClients = 9;</code>
       */
      public long getVlsAllClients() {
        return vlsAllClients_;
      }
      /**
       * <code>optional uint64 vlsAllClients = 9;</code>
       */
      public Builder setVlsAllClients(long value) {
        bitField0_ |= 0x00000100;
        vlsAllClients_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 vlsAllClients = 9;</code>
       */
      public Builder clearVlsAllClients() {
        bitField0_ = (bitField0_ & ~0x00000100);
        vlsAllClients_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 vlsAllStreamBytes = 10;
      private long vlsAllStreamBytes_ ;
      /**
       * <code>optional uint64 vlsAllStreamBytes = 10;</code>
       */
      public boolean hasVlsAllStreamBytes() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint64 vlsAllStreamBytes = 10;</code>
       */
      public long getVlsAllStreamBytes() {
        return vlsAllStreamBytes_;
      }
      /**
       * <code>optional uint64 vlsAllStreamBytes = 10;</code>
       */
      public Builder setVlsAllStreamBytes(long value) {
        bitField0_ |= 0x00000200;
        vlsAllStreamBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 vlsAllStreamBytes = 10;</code>
       */
      public Builder clearVlsAllStreamBytes() {
        bitField0_ = (bitField0_ & ~0x00000200);
        vlsAllStreamBytes_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 vlsDownloadRate = 11;
      private long vlsDownloadRate_ ;
      /**
       * <code>optional uint64 vlsDownloadRate = 11;</code>
       */
      public boolean hasVlsDownloadRate() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint64 vlsDownloadRate = 11;</code>
       */
      public long getVlsDownloadRate() {
        return vlsDownloadRate_;
      }
      /**
       * <code>optional uint64 vlsDownloadRate = 11;</code>
       */
      public Builder setVlsDownloadRate(long value) {
        bitField0_ |= 0x00000400;
        vlsDownloadRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 vlsDownloadRate = 11;</code>
       */
      public Builder clearVlsDownloadRate() {
        bitField0_ = (bitField0_ & ~0x00000400);
        vlsDownloadRate_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 vlsSendRate = 12;
      private long vlsSendRate_ ;
      /**
       * <code>optional uint64 vlsSendRate = 12;</code>
       */
      public boolean hasVlsSendRate() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint64 vlsSendRate = 12;</code>
       */
      public long getVlsSendRate() {
        return vlsSendRate_;
      }
      /**
       * <code>optional uint64 vlsSendRate = 12;</code>
       */
      public Builder setVlsSendRate(long value) {
        bitField0_ |= 0x00000800;
        vlsSendRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 vlsSendRate = 12;</code>
       */
      public Builder clearVlsSendRate() {
        bitField0_ = (bitField0_ & ~0x00000800);
        vlsSendRate_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 vlsEffectiveChannels = 13;
      private long vlsEffectiveChannels_ ;
      /**
       * <code>optional uint64 vlsEffectiveChannels = 13;</code>
       */
      public boolean hasVlsEffectiveChannels() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint64 vlsEffectiveChannels = 13;</code>
       */
      public long getVlsEffectiveChannels() {
        return vlsEffectiveChannels_;
      }
      /**
       * <code>optional uint64 vlsEffectiveChannels = 13;</code>
       */
      public Builder setVlsEffectiveChannels(long value) {
        bitField0_ |= 0x00001000;
        vlsEffectiveChannels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 vlsEffectiveChannels = 13;</code>
       */
      public Builder clearVlsEffectiveChannels() {
        bitField0_ = (bitField0_ & ~0x00001000);
        vlsEffectiveChannels_ = 0L;
        onChanged();
        return this;
      }

      // repeated .LiveVlsServerStatusSrv attachments = 14;
      private java.util.List<com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv> attachments_ =
        java.util.Collections.emptyList();
      private void ensureAttachmentsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          attachments_ = new java.util.ArrayList<com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv>(attachments_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrvOrBuilder> attachmentsBuilder_;

      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public java.util.List<com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv> getAttachmentsList() {
        if (attachmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attachments_);
        } else {
          return attachmentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public int getAttachmentsCount() {
        if (attachmentsBuilder_ == null) {
          return attachments_.size();
        } else {
          return attachmentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv getAttachments(int index) {
        if (attachmentsBuilder_ == null) {
          return attachments_.get(index);
        } else {
          return attachmentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public Builder setAttachments(
          int index, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv value) {
        if (attachmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttachmentsIsMutable();
          attachments_.set(index, value);
          onChanged();
        } else {
          attachmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public Builder setAttachments(
          int index, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder builderForValue) {
        if (attachmentsBuilder_ == null) {
          ensureAttachmentsIsMutable();
          attachments_.set(index, builderForValue.build());
          onChanged();
        } else {
          attachmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public Builder addAttachments(com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv value) {
        if (attachmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttachmentsIsMutable();
          attachments_.add(value);
          onChanged();
        } else {
          attachmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public Builder addAttachments(
          int index, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv value) {
        if (attachmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttachmentsIsMutable();
          attachments_.add(index, value);
          onChanged();
        } else {
          attachmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public Builder addAttachments(
          com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder builderForValue) {
        if (attachmentsBuilder_ == null) {
          ensureAttachmentsIsMutable();
          attachments_.add(builderForValue.build());
          onChanged();
        } else {
          attachmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public Builder addAttachments(
          int index, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder builderForValue) {
        if (attachmentsBuilder_ == null) {
          ensureAttachmentsIsMutable();
          attachments_.add(index, builderForValue.build());
          onChanged();
        } else {
          attachmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public Builder addAllAttachments(
          java.lang.Iterable<? extends com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv> values) {
        if (attachmentsBuilder_ == null) {
          ensureAttachmentsIsMutable();
          super.addAll(values, attachments_);
          onChanged();
        } else {
          attachmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public Builder clearAttachments() {
        if (attachmentsBuilder_ == null) {
          attachments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          attachmentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public Builder removeAttachments(int index) {
        if (attachmentsBuilder_ == null) {
          ensureAttachmentsIsMutable();
          attachments_.remove(index);
          onChanged();
        } else {
          attachmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder getAttachmentsBuilder(
          int index) {
        return getAttachmentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrvOrBuilder getAttachmentsOrBuilder(
          int index) {
        if (attachmentsBuilder_ == null) {
          return attachments_.get(index);  } else {
          return attachmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public java.util.List<? extends com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrvOrBuilder> 
           getAttachmentsOrBuilderList() {
        if (attachmentsBuilder_ != null) {
          return attachmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attachments_);
        }
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder addAttachmentsBuilder() {
        return getAttachmentsFieldBuilder().addBuilder(
            com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.getDefaultInstance());
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder addAttachmentsBuilder(
          int index) {
        return getAttachmentsFieldBuilder().addBuilder(
            index, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.getDefaultInstance());
      }
      /**
       * <code>repeated .LiveVlsServerStatusSrv attachments = 14;</code>
       */
      public java.util.List<com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder> 
           getAttachmentsBuilderList() {
        return getAttachmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrvOrBuilder> 
          getAttachmentsFieldBuilder() {
        if (attachmentsBuilder_ == null) {
          attachmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrvOrBuilder>(
                  attachments_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          attachments_ = null;
        }
        return attachmentsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:LiveVlsServerStatus)
    }

    static {
      defaultInstance = new LiveVlsServerStatus(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LiveVlsServerStatus)
  }

  public interface LiveTrackerChannelOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 trackerId = 1;
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    boolean hasTrackerId();
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    long getTrackerId();

    // optional uint64 channelCount = 2;
    /**
     * <code>optional uint64 channelCount = 2;</code>
     */
    boolean hasChannelCount();
    /**
     * <code>optional uint64 channelCount = 2;</code>
     */
    long getChannelCount();

    // repeated .LiveTrackerChannelSrv attachments = 3;
    /**
     * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
     */
    java.util.List<com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv> 
        getAttachmentsList();
    /**
     * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
     */
    com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv getAttachments(int index);
    /**
     * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
     */
    int getAttachmentsCount();
    /**
     * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
     */
    java.util.List<? extends com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrvOrBuilder> 
        getAttachmentsOrBuilderList();
    /**
     * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
     */
    com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrvOrBuilder getAttachmentsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code LiveTrackerChannel}
   */
  public static final class LiveTrackerChannel extends
      com.google.protobuf.GeneratedMessage
      implements LiveTrackerChannelOrBuilder {
    // Use LiveTrackerChannel.newBuilder() to construct.
    private LiveTrackerChannel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiveTrackerChannel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiveTrackerChannel defaultInstance;
    public static LiveTrackerChannel getDefaultInstance() {
      return defaultInstance;
    }

    public LiveTrackerChannel getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiveTrackerChannel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              trackerId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channelCount_ = input.readUInt64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                attachments_ = new java.util.ArrayList<com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv>();
                mutable_bitField0_ |= 0x00000004;
              }
              attachments_.add(input.readMessage(com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          attachments_ = java.util.Collections.unmodifiableList(attachments_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerChannel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerChannel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.voole.hobbit.proto.LivePB.LiveTrackerChannel.class, com.voole.hobbit.proto.LivePB.LiveTrackerChannel.Builder.class);
    }

    public static com.google.protobuf.Parser<LiveTrackerChannel> PARSER =
        new com.google.protobuf.AbstractParser<LiveTrackerChannel>() {
      public LiveTrackerChannel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiveTrackerChannel(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiveTrackerChannel> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 trackerId = 1;
    public static final int TRACKERID_FIELD_NUMBER = 1;
    private long trackerId_;
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    public boolean hasTrackerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    public long getTrackerId() {
      return trackerId_;
    }

    // optional uint64 channelCount = 2;
    public static final int CHANNELCOUNT_FIELD_NUMBER = 2;
    private long channelCount_;
    /**
     * <code>optional uint64 channelCount = 2;</code>
     */
    public boolean hasChannelCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 channelCount = 2;</code>
     */
    public long getChannelCount() {
      return channelCount_;
    }

    // repeated .LiveTrackerChannelSrv attachments = 3;
    public static final int ATTACHMENTS_FIELD_NUMBER = 3;
    private java.util.List<com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv> attachments_;
    /**
     * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
     */
    public java.util.List<com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv> getAttachmentsList() {
      return attachments_;
    }
    /**
     * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
     */
    public java.util.List<? extends com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrvOrBuilder> 
        getAttachmentsOrBuilderList() {
      return attachments_;
    }
    /**
     * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
     */
    public int getAttachmentsCount() {
      return attachments_.size();
    }
    /**
     * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
     */
    public com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv getAttachments(int index) {
      return attachments_.get(index);
    }
    /**
     * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
     */
    public com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrvOrBuilder getAttachmentsOrBuilder(
        int index) {
      return attachments_.get(index);
    }

    private void initFields() {
      trackerId_ = 0L;
      channelCount_ = 0L;
      attachments_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, trackerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, channelCount_);
      }
      for (int i = 0; i < attachments_.size(); i++) {
        output.writeMessage(3, attachments_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, trackerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, channelCount_);
      }
      for (int i = 0; i < attachments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, attachments_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.voole.hobbit.proto.LivePB.LiveTrackerChannel)) {
        return super.equals(obj);
      }
      com.voole.hobbit.proto.LivePB.LiveTrackerChannel other = (com.voole.hobbit.proto.LivePB.LiveTrackerChannel) obj;

      boolean result = true;
      result = result && (hasTrackerId() == other.hasTrackerId());
      if (hasTrackerId()) {
        result = result && (getTrackerId()
            == other.getTrackerId());
      }
      result = result && (hasChannelCount() == other.hasChannelCount());
      if (hasChannelCount()) {
        result = result && (getChannelCount()
            == other.getChannelCount());
      }
      result = result && getAttachmentsList()
          .equals(other.getAttachmentsList());
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    private int memoizedHashCode = 0;
    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTrackerId()) {
        hash = (37 * hash) + TRACKERID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getTrackerId());
      }
      if (hasChannelCount()) {
        hash = (37 * hash) + CHANNELCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelCount());
      }
      if (getAttachmentsCount() > 0) {
        hash = (37 * hash) + ATTACHMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getAttachmentsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.voole.hobbit.proto.LivePB.LiveTrackerChannel prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LiveTrackerChannel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.voole.hobbit.proto.LivePB.LiveTrackerChannelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerChannel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.voole.hobbit.proto.LivePB.LiveTrackerChannel.class, com.voole.hobbit.proto.LivePB.LiveTrackerChannel.Builder.class);
      }

      // Construct using com.voole.hobbit.proto.LivePB.LiveTrackerChannel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAttachmentsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        trackerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        channelCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (attachmentsBuilder_ == null) {
          attachments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          attachmentsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerChannel_descriptor;
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerChannel getDefaultInstanceForType() {
        return com.voole.hobbit.proto.LivePB.LiveTrackerChannel.getDefaultInstance();
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerChannel build() {
        com.voole.hobbit.proto.LivePB.LiveTrackerChannel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerChannel buildPartial() {
        com.voole.hobbit.proto.LivePB.LiveTrackerChannel result = new com.voole.hobbit.proto.LivePB.LiveTrackerChannel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trackerId_ = trackerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channelCount_ = channelCount_;
        if (attachmentsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            attachments_ = java.util.Collections.unmodifiableList(attachments_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.attachments_ = attachments_;
        } else {
          result.attachments_ = attachmentsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.voole.hobbit.proto.LivePB.LiveTrackerChannel) {
          return mergeFrom((com.voole.hobbit.proto.LivePB.LiveTrackerChannel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.voole.hobbit.proto.LivePB.LiveTrackerChannel other) {
        if (other == com.voole.hobbit.proto.LivePB.LiveTrackerChannel.getDefaultInstance()) return this;
        if (other.hasTrackerId()) {
          setTrackerId(other.getTrackerId());
        }
        if (other.hasChannelCount()) {
          setChannelCount(other.getChannelCount());
        }
        if (attachmentsBuilder_ == null) {
          if (!other.attachments_.isEmpty()) {
            if (attachments_.isEmpty()) {
              attachments_ = other.attachments_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAttachmentsIsMutable();
              attachments_.addAll(other.attachments_);
            }
            onChanged();
          }
        } else {
          if (!other.attachments_.isEmpty()) {
            if (attachmentsBuilder_.isEmpty()) {
              attachmentsBuilder_.dispose();
              attachmentsBuilder_ = null;
              attachments_ = other.attachments_;
              bitField0_ = (bitField0_ & ~0x00000004);
              attachmentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAttachmentsFieldBuilder() : null;
            } else {
              attachmentsBuilder_.addAllMessages(other.attachments_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.voole.hobbit.proto.LivePB.LiveTrackerChannel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.voole.hobbit.proto.LivePB.LiveTrackerChannel) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 trackerId = 1;
      private long trackerId_ ;
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public boolean hasTrackerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public long getTrackerId() {
        return trackerId_;
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public Builder setTrackerId(long value) {
        bitField0_ |= 0x00000001;
        trackerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public Builder clearTrackerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trackerId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 channelCount = 2;
      private long channelCount_ ;
      /**
       * <code>optional uint64 channelCount = 2;</code>
       */
      public boolean hasChannelCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 channelCount = 2;</code>
       */
      public long getChannelCount() {
        return channelCount_;
      }
      /**
       * <code>optional uint64 channelCount = 2;</code>
       */
      public Builder setChannelCount(long value) {
        bitField0_ |= 0x00000002;
        channelCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelCount = 2;</code>
       */
      public Builder clearChannelCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelCount_ = 0L;
        onChanged();
        return this;
      }

      // repeated .LiveTrackerChannelSrv attachments = 3;
      private java.util.List<com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv> attachments_ =
        java.util.Collections.emptyList();
      private void ensureAttachmentsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          attachments_ = new java.util.ArrayList<com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv>(attachments_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrvOrBuilder> attachmentsBuilder_;

      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public java.util.List<com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv> getAttachmentsList() {
        if (attachmentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(attachments_);
        } else {
          return attachmentsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public int getAttachmentsCount() {
        if (attachmentsBuilder_ == null) {
          return attachments_.size();
        } else {
          return attachmentsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv getAttachments(int index) {
        if (attachmentsBuilder_ == null) {
          return attachments_.get(index);
        } else {
          return attachmentsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public Builder setAttachments(
          int index, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv value) {
        if (attachmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttachmentsIsMutable();
          attachments_.set(index, value);
          onChanged();
        } else {
          attachmentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public Builder setAttachments(
          int index, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder builderForValue) {
        if (attachmentsBuilder_ == null) {
          ensureAttachmentsIsMutable();
          attachments_.set(index, builderForValue.build());
          onChanged();
        } else {
          attachmentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public Builder addAttachments(com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv value) {
        if (attachmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttachmentsIsMutable();
          attachments_.add(value);
          onChanged();
        } else {
          attachmentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public Builder addAttachments(
          int index, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv value) {
        if (attachmentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAttachmentsIsMutable();
          attachments_.add(index, value);
          onChanged();
        } else {
          attachmentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public Builder addAttachments(
          com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder builderForValue) {
        if (attachmentsBuilder_ == null) {
          ensureAttachmentsIsMutable();
          attachments_.add(builderForValue.build());
          onChanged();
        } else {
          attachmentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public Builder addAttachments(
          int index, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder builderForValue) {
        if (attachmentsBuilder_ == null) {
          ensureAttachmentsIsMutable();
          attachments_.add(index, builderForValue.build());
          onChanged();
        } else {
          attachmentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public Builder addAllAttachments(
          java.lang.Iterable<? extends com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv> values) {
        if (attachmentsBuilder_ == null) {
          ensureAttachmentsIsMutable();
          super.addAll(values, attachments_);
          onChanged();
        } else {
          attachmentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public Builder clearAttachments() {
        if (attachmentsBuilder_ == null) {
          attachments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          attachmentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public Builder removeAttachments(int index) {
        if (attachmentsBuilder_ == null) {
          ensureAttachmentsIsMutable();
          attachments_.remove(index);
          onChanged();
        } else {
          attachmentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder getAttachmentsBuilder(
          int index) {
        return getAttachmentsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrvOrBuilder getAttachmentsOrBuilder(
          int index) {
        if (attachmentsBuilder_ == null) {
          return attachments_.get(index);  } else {
          return attachmentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public java.util.List<? extends com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrvOrBuilder> 
           getAttachmentsOrBuilderList() {
        if (attachmentsBuilder_ != null) {
          return attachmentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(attachments_);
        }
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder addAttachmentsBuilder() {
        return getAttachmentsFieldBuilder().addBuilder(
            com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.getDefaultInstance());
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder addAttachmentsBuilder(
          int index) {
        return getAttachmentsFieldBuilder().addBuilder(
            index, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.getDefaultInstance());
      }
      /**
       * <code>repeated .LiveTrackerChannelSrv attachments = 3;</code>
       */
      public java.util.List<com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder> 
           getAttachmentsBuilderList() {
        return getAttachmentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrvOrBuilder> 
          getAttachmentsFieldBuilder() {
        if (attachmentsBuilder_ == null) {
          attachmentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrvOrBuilder>(
                  attachments_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          attachments_ = null;
        }
        return attachmentsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:LiveTrackerChannel)
    }

    static {
      defaultInstance = new LiveTrackerChannel(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LiveTrackerChannel)
  }

  public interface LiveTrackerFailgetOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 trackerId = 1;
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    boolean hasTrackerId();
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    long getTrackerId();

    // optional string uuid = 2;
    /**
     * <code>optional string uuid = 2;</code>
     */
    boolean hasUuid();
    /**
     * <code>optional string uuid = 2;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>optional string uuid = 2;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // optional string uid = 3;
    /**
     * <code>optional string uid = 3;</code>
     */
    boolean hasUid();
    /**
     * <code>optional string uid = 3;</code>
     */
    java.lang.String getUid();
    /**
     * <code>optional string uid = 3;</code>
     */
    com.google.protobuf.ByteString
        getUidBytes();

    // optional uint64 userType = 4;
    /**
     * <code>optional uint64 userType = 4;</code>
     */
    boolean hasUserType();
    /**
     * <code>optional uint64 userType = 4;</code>
     */
    long getUserType();

    // optional uint64 ip = 5;
    /**
     * <code>optional uint64 ip = 5;</code>
     */
    boolean hasIp();
    /**
     * <code>optional uint64 ip = 5;</code>
     */
    long getIp();

    // optional uint32 port = 6;
    /**
     * <code>optional uint32 port = 6;</code>
     */
    boolean hasPort();
    /**
     * <code>optional uint32 port = 6;</code>
     */
    int getPort();

    // optional uint64 channelid = 7;
    /**
     * <code>optional uint64 channelid = 7;</code>
     */
    boolean hasChannelid();
    /**
     * <code>optional uint64 channelid = 7;</code>
     */
    long getChannelid();

    // optional uint64 errCode = 8;
    /**
     * <code>optional uint64 errCode = 8;</code>
     */
    boolean hasErrCode();
    /**
     * <code>optional uint64 errCode = 8;</code>
     */
    long getErrCode();

    // optional uint64 authLen = 9;
    /**
     * <code>optional uint64 authLen = 9;</code>
     */
    boolean hasAuthLen();
    /**
     * <code>optional uint64 authLen = 9;</code>
     */
    long getAuthLen();

    // optional string auth = 10;
    /**
     * <code>optional string auth = 10;</code>
     */
    boolean hasAuth();
    /**
     * <code>optional string auth = 10;</code>
     */
    java.lang.String getAuth();
    /**
     * <code>optional string auth = 10;</code>
     */
    com.google.protobuf.ByteString
        getAuthBytes();
  }
  /**
   * Protobuf type {@code LiveTrackerFailget}
   */
  public static final class LiveTrackerFailget extends
      com.google.protobuf.GeneratedMessage
      implements LiveTrackerFailgetOrBuilder {
    // Use LiveTrackerFailget.newBuilder() to construct.
    private LiveTrackerFailget(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiveTrackerFailget(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiveTrackerFailget defaultInstance;
    public static LiveTrackerFailget getDefaultInstance() {
      return defaultInstance;
    }

    public LiveTrackerFailget getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiveTrackerFailget(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              trackerId_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              uuid_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              uid_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              userType_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ip_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              port_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              channelid_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              errCode_ = input.readUInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              authLen_ = input.readUInt64();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              auth_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerFailget_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerFailget_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.voole.hobbit.proto.LivePB.LiveTrackerFailget.class, com.voole.hobbit.proto.LivePB.LiveTrackerFailget.Builder.class);
    }

    public static com.google.protobuf.Parser<LiveTrackerFailget> PARSER =
        new com.google.protobuf.AbstractParser<LiveTrackerFailget>() {
      public LiveTrackerFailget parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiveTrackerFailget(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiveTrackerFailget> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 trackerId = 1;
    public static final int TRACKERID_FIELD_NUMBER = 1;
    private long trackerId_;
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    public boolean hasTrackerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    public long getTrackerId() {
      return trackerId_;
    }

    // optional string uuid = 2;
    public static final int UUID_FIELD_NUMBER = 2;
    private java.lang.Object uuid_;
    /**
     * <code>optional string uuid = 2;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string uuid = 2;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uuid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string uid = 3;
    public static final int UID_FIELD_NUMBER = 3;
    private java.lang.Object uid_;
    /**
     * <code>optional string uid = 3;</code>
     */
    public boolean hasUid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string uid = 3;</code>
     */
    public java.lang.String getUid() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUidBytes() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint64 userType = 4;
    public static final int USERTYPE_FIELD_NUMBER = 4;
    private long userType_;
    /**
     * <code>optional uint64 userType = 4;</code>
     */
    public boolean hasUserType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 userType = 4;</code>
     */
    public long getUserType() {
      return userType_;
    }

    // optional uint64 ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private long ip_;
    /**
     * <code>optional uint64 ip = 5;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 ip = 5;</code>
     */
    public long getIp() {
      return ip_;
    }

    // optional uint32 port = 6;
    public static final int PORT_FIELD_NUMBER = 6;
    private int port_;
    /**
     * <code>optional uint32 port = 6;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 port = 6;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional uint64 channelid = 7;
    public static final int CHANNELID_FIELD_NUMBER = 7;
    private long channelid_;
    /**
     * <code>optional uint64 channelid = 7;</code>
     */
    public boolean hasChannelid() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 channelid = 7;</code>
     */
    public long getChannelid() {
      return channelid_;
    }

    // optional uint64 errCode = 8;
    public static final int ERRCODE_FIELD_NUMBER = 8;
    private long errCode_;
    /**
     * <code>optional uint64 errCode = 8;</code>
     */
    public boolean hasErrCode() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 errCode = 8;</code>
     */
    public long getErrCode() {
      return errCode_;
    }

    // optional uint64 authLen = 9;
    public static final int AUTHLEN_FIELD_NUMBER = 9;
    private long authLen_;
    /**
     * <code>optional uint64 authLen = 9;</code>
     */
    public boolean hasAuthLen() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 authLen = 9;</code>
     */
    public long getAuthLen() {
      return authLen_;
    }

    // optional string auth = 10;
    public static final int AUTH_FIELD_NUMBER = 10;
    private java.lang.Object auth_;
    /**
     * <code>optional string auth = 10;</code>
     */
    public boolean hasAuth() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string auth = 10;</code>
     */
    public java.lang.String getAuth() {
      java.lang.Object ref = auth_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          auth_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string auth = 10;</code>
     */
    public com.google.protobuf.ByteString
        getAuthBytes() {
      java.lang.Object ref = auth_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        auth_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      trackerId_ = 0L;
      uuid_ = "";
      uid_ = "";
      userType_ = 0L;
      ip_ = 0L;
      port_ = 0;
      channelid_ = 0L;
      errCode_ = 0L;
      authLen_ = 0L;
      auth_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, trackerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUuidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getUidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, userType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, ip_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, port_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, channelid_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, errCode_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(9, authLen_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getAuthBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, trackerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUuidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getUidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, userType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, ip_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, port_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, channelid_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, errCode_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, authLen_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getAuthBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.voole.hobbit.proto.LivePB.LiveTrackerFailget)) {
        return super.equals(obj);
      }
      com.voole.hobbit.proto.LivePB.LiveTrackerFailget other = (com.voole.hobbit.proto.LivePB.LiveTrackerFailget) obj;

      boolean result = true;
      result = result && (hasTrackerId() == other.hasTrackerId());
      if (hasTrackerId()) {
        result = result && (getTrackerId()
            == other.getTrackerId());
      }
      result = result && (hasUuid() == other.hasUuid());
      if (hasUuid()) {
        result = result && getUuid()
            .equals(other.getUuid());
      }
      result = result && (hasUid() == other.hasUid());
      if (hasUid()) {
        result = result && getUid()
            .equals(other.getUid());
      }
      result = result && (hasUserType() == other.hasUserType());
      if (hasUserType()) {
        result = result && (getUserType()
            == other.getUserType());
      }
      result = result && (hasIp() == other.hasIp());
      if (hasIp()) {
        result = result && (getIp()
            == other.getIp());
      }
      result = result && (hasPort() == other.hasPort());
      if (hasPort()) {
        result = result && (getPort()
            == other.getPort());
      }
      result = result && (hasChannelid() == other.hasChannelid());
      if (hasChannelid()) {
        result = result && (getChannelid()
            == other.getChannelid());
      }
      result = result && (hasErrCode() == other.hasErrCode());
      if (hasErrCode()) {
        result = result && (getErrCode()
            == other.getErrCode());
      }
      result = result && (hasAuthLen() == other.hasAuthLen());
      if (hasAuthLen()) {
        result = result && (getAuthLen()
            == other.getAuthLen());
      }
      result = result && (hasAuth() == other.hasAuth());
      if (hasAuth()) {
        result = result && getAuth()
            .equals(other.getAuth());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    private int memoizedHashCode = 0;
    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTrackerId()) {
        hash = (37 * hash) + TRACKERID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getTrackerId());
      }
      if (hasUuid()) {
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuid().hashCode();
      }
      if (hasUid()) {
        hash = (37 * hash) + UID_FIELD_NUMBER;
        hash = (53 * hash) + getUid().hashCode();
      }
      if (hasUserType()) {
        hash = (37 * hash) + USERTYPE_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getUserType());
      }
      if (hasIp()) {
        hash = (37 * hash) + IP_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getIp());
      }
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort();
      }
      if (hasChannelid()) {
        hash = (37 * hash) + CHANNELID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelid());
      }
      if (hasErrCode()) {
        hash = (37 * hash) + ERRCODE_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getErrCode());
      }
      if (hasAuthLen()) {
        hash = (37 * hash) + AUTHLEN_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getAuthLen());
      }
      if (hasAuth()) {
        hash = (37 * hash) + AUTH_FIELD_NUMBER;
        hash = (53 * hash) + getAuth().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.voole.hobbit.proto.LivePB.LiveTrackerFailget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFailget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFailget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFailget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFailget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFailget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFailget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFailget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFailget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFailget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.voole.hobbit.proto.LivePB.LiveTrackerFailget prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LiveTrackerFailget}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.voole.hobbit.proto.LivePB.LiveTrackerFailgetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerFailget_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerFailget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.voole.hobbit.proto.LivePB.LiveTrackerFailget.class, com.voole.hobbit.proto.LivePB.LiveTrackerFailget.Builder.class);
      }

      // Construct using com.voole.hobbit.proto.LivePB.LiveTrackerFailget.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        trackerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        uid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        userType_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        channelid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        errCode_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        authLen_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        auth_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerFailget_descriptor;
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerFailget getDefaultInstanceForType() {
        return com.voole.hobbit.proto.LivePB.LiveTrackerFailget.getDefaultInstance();
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerFailget build() {
        com.voole.hobbit.proto.LivePB.LiveTrackerFailget result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerFailget buildPartial() {
        com.voole.hobbit.proto.LivePB.LiveTrackerFailget result = new com.voole.hobbit.proto.LivePB.LiveTrackerFailget(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trackerId_ = trackerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.uid_ = uid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.userType_ = userType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.channelid_ = channelid_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.errCode_ = errCode_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.authLen_ = authLen_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.auth_ = auth_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.voole.hobbit.proto.LivePB.LiveTrackerFailget) {
          return mergeFrom((com.voole.hobbit.proto.LivePB.LiveTrackerFailget)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.voole.hobbit.proto.LivePB.LiveTrackerFailget other) {
        if (other == com.voole.hobbit.proto.LivePB.LiveTrackerFailget.getDefaultInstance()) return this;
        if (other.hasTrackerId()) {
          setTrackerId(other.getTrackerId());
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00000002;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasUid()) {
          bitField0_ |= 0x00000004;
          uid_ = other.uid_;
          onChanged();
        }
        if (other.hasUserType()) {
          setUserType(other.getUserType());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasChannelid()) {
          setChannelid(other.getChannelid());
        }
        if (other.hasErrCode()) {
          setErrCode(other.getErrCode());
        }
        if (other.hasAuthLen()) {
          setAuthLen(other.getAuthLen());
        }
        if (other.hasAuth()) {
          bitField0_ |= 0x00000200;
          auth_ = other.auth_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.voole.hobbit.proto.LivePB.LiveTrackerFailget parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.voole.hobbit.proto.LivePB.LiveTrackerFailget) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 trackerId = 1;
      private long trackerId_ ;
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public boolean hasTrackerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public long getTrackerId() {
        return trackerId_;
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public Builder setTrackerId(long value) {
        bitField0_ |= 0x00000001;
        trackerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public Builder clearTrackerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trackerId_ = 0L;
        onChanged();
        return this;
      }

      // optional string uuid = 2;
      private java.lang.Object uuid_ = "";
      /**
       * <code>optional string uuid = 2;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        uuid_ = value;
        onChanged();
        return this;
      }

      // optional string uid = 3;
      private java.lang.Object uid_ = "";
      /**
       * <code>optional string uid = 3;</code>
       */
      public boolean hasUid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public java.lang.String getUid() {
        java.lang.Object ref = uid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUidBytes() {
        java.lang.Object ref = uid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public Builder setUid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        uid_ = getDefaultInstance().getUid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public Builder setUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        uid_ = value;
        onChanged();
        return this;
      }

      // optional uint64 userType = 4;
      private long userType_ ;
      /**
       * <code>optional uint64 userType = 4;</code>
       */
      public boolean hasUserType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 userType = 4;</code>
       */
      public long getUserType() {
        return userType_;
      }
      /**
       * <code>optional uint64 userType = 4;</code>
       */
      public Builder setUserType(long value) {
        bitField0_ |= 0x00000008;
        userType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 userType = 4;</code>
       */
      public Builder clearUserType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        userType_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 ip = 5;
      private long ip_ ;
      /**
       * <code>optional uint64 ip = 5;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 ip = 5;</code>
       */
      public long getIp() {
        return ip_;
      }
      /**
       * <code>optional uint64 ip = 5;</code>
       */
      public Builder setIp(long value) {
        bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ip = 5;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 port = 6;
      private int port_ ;
      /**
       * <code>optional uint32 port = 6;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 port = 6;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional uint32 port = 6;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000020;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 port = 6;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 channelid = 7;
      private long channelid_ ;
      /**
       * <code>optional uint64 channelid = 7;</code>
       */
      public boolean hasChannelid() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 channelid = 7;</code>
       */
      public long getChannelid() {
        return channelid_;
      }
      /**
       * <code>optional uint64 channelid = 7;</code>
       */
      public Builder setChannelid(long value) {
        bitField0_ |= 0x00000040;
        channelid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelid = 7;</code>
       */
      public Builder clearChannelid() {
        bitField0_ = (bitField0_ & ~0x00000040);
        channelid_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 errCode = 8;
      private long errCode_ ;
      /**
       * <code>optional uint64 errCode = 8;</code>
       */
      public boolean hasErrCode() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 errCode = 8;</code>
       */
      public long getErrCode() {
        return errCode_;
      }
      /**
       * <code>optional uint64 errCode = 8;</code>
       */
      public Builder setErrCode(long value) {
        bitField0_ |= 0x00000080;
        errCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 errCode = 8;</code>
       */
      public Builder clearErrCode() {
        bitField0_ = (bitField0_ & ~0x00000080);
        errCode_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 authLen = 9;
      private long authLen_ ;
      /**
       * <code>optional uint64 authLen = 9;</code>
       */
      public boolean hasAuthLen() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 authLen = 9;</code>
       */
      public long getAuthLen() {
        return authLen_;
      }
      /**
       * <code>optional uint64 authLen = 9;</code>
       */
      public Builder setAuthLen(long value) {
        bitField0_ |= 0x00000100;
        authLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 authLen = 9;</code>
       */
      public Builder clearAuthLen() {
        bitField0_ = (bitField0_ & ~0x00000100);
        authLen_ = 0L;
        onChanged();
        return this;
      }

      // optional string auth = 10;
      private java.lang.Object auth_ = "";
      /**
       * <code>optional string auth = 10;</code>
       */
      public boolean hasAuth() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string auth = 10;</code>
       */
      public java.lang.String getAuth() {
        java.lang.Object ref = auth_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          auth_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string auth = 10;</code>
       */
      public com.google.protobuf.ByteString
          getAuthBytes() {
        java.lang.Object ref = auth_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          auth_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string auth = 10;</code>
       */
      public Builder setAuth(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        auth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string auth = 10;</code>
       */
      public Builder clearAuth() {
        bitField0_ = (bitField0_ & ~0x00000200);
        auth_ = getDefaultInstance().getAuth();
        onChanged();
        return this;
      }
      /**
       * <code>optional string auth = 10;</code>
       */
      public Builder setAuthBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        auth_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LiveTrackerFailget)
    }

    static {
      defaultInstance = new LiveTrackerFailget(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LiveTrackerFailget)
  }

  public interface LiveTrackerFailloginOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 trackerId = 1;
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    boolean hasTrackerId();
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    long getTrackerId();

    // optional string uuid = 2;
    /**
     * <code>optional string uuid = 2;</code>
     */
    boolean hasUuid();
    /**
     * <code>optional string uuid = 2;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>optional string uuid = 2;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // optional string uid = 3;
    /**
     * <code>optional string uid = 3;</code>
     */
    boolean hasUid();
    /**
     * <code>optional string uid = 3;</code>
     */
    java.lang.String getUid();
    /**
     * <code>optional string uid = 3;</code>
     */
    com.google.protobuf.ByteString
        getUidBytes();

    // optional uint64 userType = 4;
    /**
     * <code>optional uint64 userType = 4;</code>
     */
    boolean hasUserType();
    /**
     * <code>optional uint64 userType = 4;</code>
     */
    long getUserType();

    // optional uint64 oemid = 5;
    /**
     * <code>optional uint64 oemid = 5;</code>
     */
    boolean hasOemid();
    /**
     * <code>optional uint64 oemid = 5;</code>
     */
    long getOemid();

    // optional uint64 vipid = 6;
    /**
     * <code>optional uint64 vipid = 6;</code>
     */
    boolean hasVipid();
    /**
     * <code>optional uint64 vipid = 6;</code>
     */
    long getVipid();

    // optional uint64 ip = 7;
    /**
     * <code>optional uint64 ip = 7;</code>
     */
    boolean hasIp();
    /**
     * <code>optional uint64 ip = 7;</code>
     */
    long getIp();

    // optional uint32 port = 8;
    /**
     * <code>optional uint32 port = 8;</code>
     */
    boolean hasPort();
    /**
     * <code>optional uint32 port = 8;</code>
     */
    int getPort();

    // optional uint64 ip1 = 9;
    /**
     * <code>optional uint64 ip1 = 9;</code>
     */
    boolean hasIp1();
    /**
     * <code>optional uint64 ip1 = 9;</code>
     */
    long getIp1();

    // optional uint32 port1 = 10;
    /**
     * <code>optional uint32 port1 = 10;</code>
     */
    boolean hasPort1();
    /**
     * <code>optional uint32 port1 = 10;</code>
     */
    int getPort1();

    // optional uint64 channelid = 11;
    /**
     * <code>optional uint64 channelid = 11;</code>
     */
    boolean hasChannelid();
    /**
     * <code>optional uint64 channelid = 11;</code>
     */
    long getChannelid();

    // optional uint64 errorCode = 12;
    /**
     * <code>optional uint64 errorCode = 12;</code>
     */
    boolean hasErrorCode();
    /**
     * <code>optional uint64 errorCode = 12;</code>
     */
    long getErrorCode();
  }
  /**
   * Protobuf type {@code LiveTrackerFaillogin}
   */
  public static final class LiveTrackerFaillogin extends
      com.google.protobuf.GeneratedMessage
      implements LiveTrackerFailloginOrBuilder {
    // Use LiveTrackerFaillogin.newBuilder() to construct.
    private LiveTrackerFaillogin(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiveTrackerFaillogin(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiveTrackerFaillogin defaultInstance;
    public static LiveTrackerFaillogin getDefaultInstance() {
      return defaultInstance;
    }

    public LiveTrackerFaillogin getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiveTrackerFaillogin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              trackerId_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              uuid_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              uid_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              userType_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              oemid_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              vipid_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              ip_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              port_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              ip1_ = input.readUInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              port1_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              channelid_ = input.readUInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              errorCode_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerFaillogin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerFaillogin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin.class, com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin.Builder.class);
    }

    public static com.google.protobuf.Parser<LiveTrackerFaillogin> PARSER =
        new com.google.protobuf.AbstractParser<LiveTrackerFaillogin>() {
      public LiveTrackerFaillogin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiveTrackerFaillogin(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiveTrackerFaillogin> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 trackerId = 1;
    public static final int TRACKERID_FIELD_NUMBER = 1;
    private long trackerId_;
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    public boolean hasTrackerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    public long getTrackerId() {
      return trackerId_;
    }

    // optional string uuid = 2;
    public static final int UUID_FIELD_NUMBER = 2;
    private java.lang.Object uuid_;
    /**
     * <code>optional string uuid = 2;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string uuid = 2;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uuid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string uid = 3;
    public static final int UID_FIELD_NUMBER = 3;
    private java.lang.Object uid_;
    /**
     * <code>optional string uid = 3;</code>
     */
    public boolean hasUid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string uid = 3;</code>
     */
    public java.lang.String getUid() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUidBytes() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint64 userType = 4;
    public static final int USERTYPE_FIELD_NUMBER = 4;
    private long userType_;
    /**
     * <code>optional uint64 userType = 4;</code>
     */
    public boolean hasUserType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 userType = 4;</code>
     */
    public long getUserType() {
      return userType_;
    }

    // optional uint64 oemid = 5;
    public static final int OEMID_FIELD_NUMBER = 5;
    private long oemid_;
    /**
     * <code>optional uint64 oemid = 5;</code>
     */
    public boolean hasOemid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 oemid = 5;</code>
     */
    public long getOemid() {
      return oemid_;
    }

    // optional uint64 vipid = 6;
    public static final int VIPID_FIELD_NUMBER = 6;
    private long vipid_;
    /**
     * <code>optional uint64 vipid = 6;</code>
     */
    public boolean hasVipid() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 vipid = 6;</code>
     */
    public long getVipid() {
      return vipid_;
    }

    // optional uint64 ip = 7;
    public static final int IP_FIELD_NUMBER = 7;
    private long ip_;
    /**
     * <code>optional uint64 ip = 7;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 ip = 7;</code>
     */
    public long getIp() {
      return ip_;
    }

    // optional uint32 port = 8;
    public static final int PORT_FIELD_NUMBER = 8;
    private int port_;
    /**
     * <code>optional uint32 port = 8;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 port = 8;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional uint64 ip1 = 9;
    public static final int IP1_FIELD_NUMBER = 9;
    private long ip1_;
    /**
     * <code>optional uint64 ip1 = 9;</code>
     */
    public boolean hasIp1() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 ip1 = 9;</code>
     */
    public long getIp1() {
      return ip1_;
    }

    // optional uint32 port1 = 10;
    public static final int PORT1_FIELD_NUMBER = 10;
    private int port1_;
    /**
     * <code>optional uint32 port1 = 10;</code>
     */
    public boolean hasPort1() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 port1 = 10;</code>
     */
    public int getPort1() {
      return port1_;
    }

    // optional uint64 channelid = 11;
    public static final int CHANNELID_FIELD_NUMBER = 11;
    private long channelid_;
    /**
     * <code>optional uint64 channelid = 11;</code>
     */
    public boolean hasChannelid() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint64 channelid = 11;</code>
     */
    public long getChannelid() {
      return channelid_;
    }

    // optional uint64 errorCode = 12;
    public static final int ERRORCODE_FIELD_NUMBER = 12;
    private long errorCode_;
    /**
     * <code>optional uint64 errorCode = 12;</code>
     */
    public boolean hasErrorCode() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint64 errorCode = 12;</code>
     */
    public long getErrorCode() {
      return errorCode_;
    }

    private void initFields() {
      trackerId_ = 0L;
      uuid_ = "";
      uid_ = "";
      userType_ = 0L;
      oemid_ = 0L;
      vipid_ = 0L;
      ip_ = 0L;
      port_ = 0;
      ip1_ = 0L;
      port1_ = 0;
      channelid_ = 0L;
      errorCode_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, trackerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUuidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getUidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, userType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, oemid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, vipid_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, ip_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, port_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(9, ip1_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, port1_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt64(11, channelid_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt64(12, errorCode_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, trackerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUuidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getUidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, userType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, oemid_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, vipid_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, ip_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, port_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, ip1_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, port1_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, channelid_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(12, errorCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin)) {
        return super.equals(obj);
      }
      com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin other = (com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin) obj;

      boolean result = true;
      result = result && (hasTrackerId() == other.hasTrackerId());
      if (hasTrackerId()) {
        result = result && (getTrackerId()
            == other.getTrackerId());
      }
      result = result && (hasUuid() == other.hasUuid());
      if (hasUuid()) {
        result = result && getUuid()
            .equals(other.getUuid());
      }
      result = result && (hasUid() == other.hasUid());
      if (hasUid()) {
        result = result && getUid()
            .equals(other.getUid());
      }
      result = result && (hasUserType() == other.hasUserType());
      if (hasUserType()) {
        result = result && (getUserType()
            == other.getUserType());
      }
      result = result && (hasOemid() == other.hasOemid());
      if (hasOemid()) {
        result = result && (getOemid()
            == other.getOemid());
      }
      result = result && (hasVipid() == other.hasVipid());
      if (hasVipid()) {
        result = result && (getVipid()
            == other.getVipid());
      }
      result = result && (hasIp() == other.hasIp());
      if (hasIp()) {
        result = result && (getIp()
            == other.getIp());
      }
      result = result && (hasPort() == other.hasPort());
      if (hasPort()) {
        result = result && (getPort()
            == other.getPort());
      }
      result = result && (hasIp1() == other.hasIp1());
      if (hasIp1()) {
        result = result && (getIp1()
            == other.getIp1());
      }
      result = result && (hasPort1() == other.hasPort1());
      if (hasPort1()) {
        result = result && (getPort1()
            == other.getPort1());
      }
      result = result && (hasChannelid() == other.hasChannelid());
      if (hasChannelid()) {
        result = result && (getChannelid()
            == other.getChannelid());
      }
      result = result && (hasErrorCode() == other.hasErrorCode());
      if (hasErrorCode()) {
        result = result && (getErrorCode()
            == other.getErrorCode());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    private int memoizedHashCode = 0;
    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTrackerId()) {
        hash = (37 * hash) + TRACKERID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getTrackerId());
      }
      if (hasUuid()) {
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuid().hashCode();
      }
      if (hasUid()) {
        hash = (37 * hash) + UID_FIELD_NUMBER;
        hash = (53 * hash) + getUid().hashCode();
      }
      if (hasUserType()) {
        hash = (37 * hash) + USERTYPE_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getUserType());
      }
      if (hasOemid()) {
        hash = (37 * hash) + OEMID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getOemid());
      }
      if (hasVipid()) {
        hash = (37 * hash) + VIPID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getVipid());
      }
      if (hasIp()) {
        hash = (37 * hash) + IP_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getIp());
      }
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort();
      }
      if (hasIp1()) {
        hash = (37 * hash) + IP1_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getIp1());
      }
      if (hasPort1()) {
        hash = (37 * hash) + PORT1_FIELD_NUMBER;
        hash = (53 * hash) + getPort1();
      }
      if (hasChannelid()) {
        hash = (37 * hash) + CHANNELID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelid());
      }
      if (hasErrorCode()) {
        hash = (37 * hash) + ERRORCODE_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getErrorCode());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LiveTrackerFaillogin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.voole.hobbit.proto.LivePB.LiveTrackerFailloginOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerFaillogin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerFaillogin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin.class, com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin.Builder.class);
      }

      // Construct using com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        trackerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        uid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        userType_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        oemid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        vipid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        ip_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        ip1_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        port1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        channelid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        errorCode_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerFaillogin_descriptor;
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin getDefaultInstanceForType() {
        return com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin.getDefaultInstance();
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin build() {
        com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin buildPartial() {
        com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin result = new com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trackerId_ = trackerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.uid_ = uid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.userType_ = userType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.oemid_ = oemid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.vipid_ = vipid_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.ip1_ = ip1_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.port1_ = port1_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.channelid_ = channelid_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.errorCode_ = errorCode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin) {
          return mergeFrom((com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin other) {
        if (other == com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin.getDefaultInstance()) return this;
        if (other.hasTrackerId()) {
          setTrackerId(other.getTrackerId());
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00000002;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasUid()) {
          bitField0_ |= 0x00000004;
          uid_ = other.uid_;
          onChanged();
        }
        if (other.hasUserType()) {
          setUserType(other.getUserType());
        }
        if (other.hasOemid()) {
          setOemid(other.getOemid());
        }
        if (other.hasVipid()) {
          setVipid(other.getVipid());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasIp1()) {
          setIp1(other.getIp1());
        }
        if (other.hasPort1()) {
          setPort1(other.getPort1());
        }
        if (other.hasChannelid()) {
          setChannelid(other.getChannelid());
        }
        if (other.hasErrorCode()) {
          setErrorCode(other.getErrorCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.voole.hobbit.proto.LivePB.LiveTrackerFaillogin) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 trackerId = 1;
      private long trackerId_ ;
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public boolean hasTrackerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public long getTrackerId() {
        return trackerId_;
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public Builder setTrackerId(long value) {
        bitField0_ |= 0x00000001;
        trackerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public Builder clearTrackerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trackerId_ = 0L;
        onChanged();
        return this;
      }

      // optional string uuid = 2;
      private java.lang.Object uuid_ = "";
      /**
       * <code>optional string uuid = 2;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        uuid_ = value;
        onChanged();
        return this;
      }

      // optional string uid = 3;
      private java.lang.Object uid_ = "";
      /**
       * <code>optional string uid = 3;</code>
       */
      public boolean hasUid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public java.lang.String getUid() {
        java.lang.Object ref = uid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUidBytes() {
        java.lang.Object ref = uid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public Builder setUid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        uid_ = getDefaultInstance().getUid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public Builder setUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        uid_ = value;
        onChanged();
        return this;
      }

      // optional uint64 userType = 4;
      private long userType_ ;
      /**
       * <code>optional uint64 userType = 4;</code>
       */
      public boolean hasUserType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 userType = 4;</code>
       */
      public long getUserType() {
        return userType_;
      }
      /**
       * <code>optional uint64 userType = 4;</code>
       */
      public Builder setUserType(long value) {
        bitField0_ |= 0x00000008;
        userType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 userType = 4;</code>
       */
      public Builder clearUserType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        userType_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 oemid = 5;
      private long oemid_ ;
      /**
       * <code>optional uint64 oemid = 5;</code>
       */
      public boolean hasOemid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 oemid = 5;</code>
       */
      public long getOemid() {
        return oemid_;
      }
      /**
       * <code>optional uint64 oemid = 5;</code>
       */
      public Builder setOemid(long value) {
        bitField0_ |= 0x00000010;
        oemid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 oemid = 5;</code>
       */
      public Builder clearOemid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        oemid_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 vipid = 6;
      private long vipid_ ;
      /**
       * <code>optional uint64 vipid = 6;</code>
       */
      public boolean hasVipid() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 vipid = 6;</code>
       */
      public long getVipid() {
        return vipid_;
      }
      /**
       * <code>optional uint64 vipid = 6;</code>
       */
      public Builder setVipid(long value) {
        bitField0_ |= 0x00000020;
        vipid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 vipid = 6;</code>
       */
      public Builder clearVipid() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vipid_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 ip = 7;
      private long ip_ ;
      /**
       * <code>optional uint64 ip = 7;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 ip = 7;</code>
       */
      public long getIp() {
        return ip_;
      }
      /**
       * <code>optional uint64 ip = 7;</code>
       */
      public Builder setIp(long value) {
        bitField0_ |= 0x00000040;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ip = 7;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ip_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 port = 8;
      private int port_ ;
      /**
       * <code>optional uint32 port = 8;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 port = 8;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional uint32 port = 8;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000080;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 port = 8;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000080);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 ip1 = 9;
      private long ip1_ ;
      /**
       * <code>optional uint64 ip1 = 9;</code>
       */
      public boolean hasIp1() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 ip1 = 9;</code>
       */
      public long getIp1() {
        return ip1_;
      }
      /**
       * <code>optional uint64 ip1 = 9;</code>
       */
      public Builder setIp1(long value) {
        bitField0_ |= 0x00000100;
        ip1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ip1 = 9;</code>
       */
      public Builder clearIp1() {
        bitField0_ = (bitField0_ & ~0x00000100);
        ip1_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 port1 = 10;
      private int port1_ ;
      /**
       * <code>optional uint32 port1 = 10;</code>
       */
      public boolean hasPort1() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 port1 = 10;</code>
       */
      public int getPort1() {
        return port1_;
      }
      /**
       * <code>optional uint32 port1 = 10;</code>
       */
      public Builder setPort1(int value) {
        bitField0_ |= 0x00000200;
        port1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 port1 = 10;</code>
       */
      public Builder clearPort1() {
        bitField0_ = (bitField0_ & ~0x00000200);
        port1_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 channelid = 11;
      private long channelid_ ;
      /**
       * <code>optional uint64 channelid = 11;</code>
       */
      public boolean hasChannelid() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint64 channelid = 11;</code>
       */
      public long getChannelid() {
        return channelid_;
      }
      /**
       * <code>optional uint64 channelid = 11;</code>
       */
      public Builder setChannelid(long value) {
        bitField0_ |= 0x00000400;
        channelid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelid = 11;</code>
       */
      public Builder clearChannelid() {
        bitField0_ = (bitField0_ & ~0x00000400);
        channelid_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 errorCode = 12;
      private long errorCode_ ;
      /**
       * <code>optional uint64 errorCode = 12;</code>
       */
      public boolean hasErrorCode() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint64 errorCode = 12;</code>
       */
      public long getErrorCode() {
        return errorCode_;
      }
      /**
       * <code>optional uint64 errorCode = 12;</code>
       */
      public Builder setErrorCode(long value) {
        bitField0_ |= 0x00000800;
        errorCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 errorCode = 12;</code>
       */
      public Builder clearErrorCode() {
        bitField0_ = (bitField0_ & ~0x00000800);
        errorCode_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LiveTrackerFaillogin)
    }

    static {
      defaultInstance = new LiveTrackerFaillogin(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LiveTrackerFaillogin)
  }

  public interface LiveVlsServerStatusSrvOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 channelId = 1;
    /**
     * <code>optional uint64 channelId = 1;</code>
     */
    boolean hasChannelId();
    /**
     * <code>optional uint64 channelId = 1;</code>
     */
    long getChannelId();

    // optional uint32 channelType = 2;
    /**
     * <code>optional uint32 channelType = 2;</code>
     */
    boolean hasChannelType();
    /**
     * <code>optional uint32 channelType = 2;</code>
     */
    int getChannelType();

    // optional uint32 channelStatus = 3;
    /**
     * <code>optional uint32 channelStatus = 3;</code>
     */
    boolean hasChannelStatus();
    /**
     * <code>optional uint32 channelStatus = 3;</code>
     */
    int getChannelStatus();

    // optional uint64 channelCurrentClients = 4;
    /**
     * <code>optional uint64 channelCurrentClients = 4;</code>
     */
    boolean hasChannelCurrentClients();
    /**
     * <code>optional uint64 channelCurrentClients = 4;</code>
     */
    long getChannelCurrentClients();

    // optional uint64 channelStartTime = 5;
    /**
     * <code>optional uint64 channelStartTime = 5;</code>
     */
    boolean hasChannelStartTime();
    /**
     * <code>optional uint64 channelStartTime = 5;</code>
     */
    long getChannelStartTime();

    // optional uint64 channelStopTime = 6;
    /**
     * <code>optional uint64 channelStopTime = 6;</code>
     */
    boolean hasChannelStopTime();
    /**
     * <code>optional uint64 channelStopTime = 6;</code>
     */
    long getChannelStopTime();

    // optional uint64 channelVlsIp = 7;
    /**
     * <code>optional uint64 channelVlsIp = 7;</code>
     */
    boolean hasChannelVlsIp();
    /**
     * <code>optional uint64 channelVlsIp = 7;</code>
     */
    long getChannelVlsIp();

    // optional uint32 channelVlsPort = 8;
    /**
     * <code>optional uint32 channelVlsPort = 8;</code>
     */
    boolean hasChannelVlsPort();
    /**
     * <code>optional uint32 channelVlsPort = 8;</code>
     */
    int getChannelVlsPort();

    // optional uint64 channelSendBytes = 9;
    /**
     * <code>optional uint64 channelSendBytes = 9;</code>
     */
    boolean hasChannelSendBytes();
    /**
     * <code>optional uint64 channelSendBytes = 9;</code>
     */
    long getChannelSendBytes();

    // optional uint64 channelDownloadRate = 10;
    /**
     * <code>optional uint64 channelDownloadRate = 10;</code>
     */
    boolean hasChannelDownloadRate();
    /**
     * <code>optional uint64 channelDownloadRate = 10;</code>
     */
    long getChannelDownloadRate();

    // optional uint64 channelSendRate = 11;
    /**
     * <code>optional uint64 channelSendRate = 11;</code>
     */
    boolean hasChannelSendRate();
    /**
     * <code>optional uint64 channelSendRate = 11;</code>
     */
    long getChannelSendRate();
  }
  /**
   * Protobuf type {@code LiveVlsServerStatusSrv}
   */
  public static final class LiveVlsServerStatusSrv extends
      com.google.protobuf.GeneratedMessage
      implements LiveVlsServerStatusSrvOrBuilder {
    // Use LiveVlsServerStatusSrv.newBuilder() to construct.
    private LiveVlsServerStatusSrv(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiveVlsServerStatusSrv(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiveVlsServerStatusSrv defaultInstance;
    public static LiveVlsServerStatusSrv getDefaultInstance() {
      return defaultInstance;
    }

    public LiveVlsServerStatusSrv getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiveVlsServerStatusSrv(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              channelId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channelType_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              channelStatus_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              channelCurrentClients_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              channelStartTime_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              channelStopTime_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              channelVlsIp_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              channelVlsPort_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              channelSendBytes_ = input.readUInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              channelDownloadRate_ = input.readUInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              channelSendRate_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveVlsServerStatusSrv_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveVlsServerStatusSrv_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.class, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder.class);
    }

    public static com.google.protobuf.Parser<LiveVlsServerStatusSrv> PARSER =
        new com.google.protobuf.AbstractParser<LiveVlsServerStatusSrv>() {
      public LiveVlsServerStatusSrv parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiveVlsServerStatusSrv(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiveVlsServerStatusSrv> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 channelId = 1;
    public static final int CHANNELID_FIELD_NUMBER = 1;
    private long channelId_;
    /**
     * <code>optional uint64 channelId = 1;</code>
     */
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 channelId = 1;</code>
     */
    public long getChannelId() {
      return channelId_;
    }

    // optional uint32 channelType = 2;
    public static final int CHANNELTYPE_FIELD_NUMBER = 2;
    private int channelType_;
    /**
     * <code>optional uint32 channelType = 2;</code>
     */
    public boolean hasChannelType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 channelType = 2;</code>
     */
    public int getChannelType() {
      return channelType_;
    }

    // optional uint32 channelStatus = 3;
    public static final int CHANNELSTATUS_FIELD_NUMBER = 3;
    private int channelStatus_;
    /**
     * <code>optional uint32 channelStatus = 3;</code>
     */
    public boolean hasChannelStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 channelStatus = 3;</code>
     */
    public int getChannelStatus() {
      return channelStatus_;
    }

    // optional uint64 channelCurrentClients = 4;
    public static final int CHANNELCURRENTCLIENTS_FIELD_NUMBER = 4;
    private long channelCurrentClients_;
    /**
     * <code>optional uint64 channelCurrentClients = 4;</code>
     */
    public boolean hasChannelCurrentClients() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 channelCurrentClients = 4;</code>
     */
    public long getChannelCurrentClients() {
      return channelCurrentClients_;
    }

    // optional uint64 channelStartTime = 5;
    public static final int CHANNELSTARTTIME_FIELD_NUMBER = 5;
    private long channelStartTime_;
    /**
     * <code>optional uint64 channelStartTime = 5;</code>
     */
    public boolean hasChannelStartTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 channelStartTime = 5;</code>
     */
    public long getChannelStartTime() {
      return channelStartTime_;
    }

    // optional uint64 channelStopTime = 6;
    public static final int CHANNELSTOPTIME_FIELD_NUMBER = 6;
    private long channelStopTime_;
    /**
     * <code>optional uint64 channelStopTime = 6;</code>
     */
    public boolean hasChannelStopTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 channelStopTime = 6;</code>
     */
    public long getChannelStopTime() {
      return channelStopTime_;
    }

    // optional uint64 channelVlsIp = 7;
    public static final int CHANNELVLSIP_FIELD_NUMBER = 7;
    private long channelVlsIp_;
    /**
     * <code>optional uint64 channelVlsIp = 7;</code>
     */
    public boolean hasChannelVlsIp() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 channelVlsIp = 7;</code>
     */
    public long getChannelVlsIp() {
      return channelVlsIp_;
    }

    // optional uint32 channelVlsPort = 8;
    public static final int CHANNELVLSPORT_FIELD_NUMBER = 8;
    private int channelVlsPort_;
    /**
     * <code>optional uint32 channelVlsPort = 8;</code>
     */
    public boolean hasChannelVlsPort() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 channelVlsPort = 8;</code>
     */
    public int getChannelVlsPort() {
      return channelVlsPort_;
    }

    // optional uint64 channelSendBytes = 9;
    public static final int CHANNELSENDBYTES_FIELD_NUMBER = 9;
    private long channelSendBytes_;
    /**
     * <code>optional uint64 channelSendBytes = 9;</code>
     */
    public boolean hasChannelSendBytes() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 channelSendBytes = 9;</code>
     */
    public long getChannelSendBytes() {
      return channelSendBytes_;
    }

    // optional uint64 channelDownloadRate = 10;
    public static final int CHANNELDOWNLOADRATE_FIELD_NUMBER = 10;
    private long channelDownloadRate_;
    /**
     * <code>optional uint64 channelDownloadRate = 10;</code>
     */
    public boolean hasChannelDownloadRate() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint64 channelDownloadRate = 10;</code>
     */
    public long getChannelDownloadRate() {
      return channelDownloadRate_;
    }

    // optional uint64 channelSendRate = 11;
    public static final int CHANNELSENDRATE_FIELD_NUMBER = 11;
    private long channelSendRate_;
    /**
     * <code>optional uint64 channelSendRate = 11;</code>
     */
    public boolean hasChannelSendRate() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint64 channelSendRate = 11;</code>
     */
    public long getChannelSendRate() {
      return channelSendRate_;
    }

    private void initFields() {
      channelId_ = 0L;
      channelType_ = 0;
      channelStatus_ = 0;
      channelCurrentClients_ = 0L;
      channelStartTime_ = 0L;
      channelStopTime_ = 0L;
      channelVlsIp_ = 0L;
      channelVlsPort_ = 0;
      channelSendBytes_ = 0L;
      channelDownloadRate_ = 0L;
      channelSendRate_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, channelType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, channelStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, channelCurrentClients_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, channelStartTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, channelStopTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, channelVlsIp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, channelVlsPort_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(9, channelSendBytes_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt64(10, channelDownloadRate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt64(11, channelSendRate_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, channelType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, channelStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, channelCurrentClients_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, channelStartTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, channelStopTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, channelVlsIp_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, channelVlsPort_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, channelSendBytes_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, channelDownloadRate_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, channelSendRate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv)) {
        return super.equals(obj);
      }
      com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv other = (com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv) obj;

      boolean result = true;
      result = result && (hasChannelId() == other.hasChannelId());
      if (hasChannelId()) {
        result = result && (getChannelId()
            == other.getChannelId());
      }
      result = result && (hasChannelType() == other.hasChannelType());
      if (hasChannelType()) {
        result = result && (getChannelType()
            == other.getChannelType());
      }
      result = result && (hasChannelStatus() == other.hasChannelStatus());
      if (hasChannelStatus()) {
        result = result && (getChannelStatus()
            == other.getChannelStatus());
      }
      result = result && (hasChannelCurrentClients() == other.hasChannelCurrentClients());
      if (hasChannelCurrentClients()) {
        result = result && (getChannelCurrentClients()
            == other.getChannelCurrentClients());
      }
      result = result && (hasChannelStartTime() == other.hasChannelStartTime());
      if (hasChannelStartTime()) {
        result = result && (getChannelStartTime()
            == other.getChannelStartTime());
      }
      result = result && (hasChannelStopTime() == other.hasChannelStopTime());
      if (hasChannelStopTime()) {
        result = result && (getChannelStopTime()
            == other.getChannelStopTime());
      }
      result = result && (hasChannelVlsIp() == other.hasChannelVlsIp());
      if (hasChannelVlsIp()) {
        result = result && (getChannelVlsIp()
            == other.getChannelVlsIp());
      }
      result = result && (hasChannelVlsPort() == other.hasChannelVlsPort());
      if (hasChannelVlsPort()) {
        result = result && (getChannelVlsPort()
            == other.getChannelVlsPort());
      }
      result = result && (hasChannelSendBytes() == other.hasChannelSendBytes());
      if (hasChannelSendBytes()) {
        result = result && (getChannelSendBytes()
            == other.getChannelSendBytes());
      }
      result = result && (hasChannelDownloadRate() == other.hasChannelDownloadRate());
      if (hasChannelDownloadRate()) {
        result = result && (getChannelDownloadRate()
            == other.getChannelDownloadRate());
      }
      result = result && (hasChannelSendRate() == other.hasChannelSendRate());
      if (hasChannelSendRate()) {
        result = result && (getChannelSendRate()
            == other.getChannelSendRate());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    private int memoizedHashCode = 0;
    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNELID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelId());
      }
      if (hasChannelType()) {
        hash = (37 * hash) + CHANNELTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getChannelType();
      }
      if (hasChannelStatus()) {
        hash = (37 * hash) + CHANNELSTATUS_FIELD_NUMBER;
        hash = (53 * hash) + getChannelStatus();
      }
      if (hasChannelCurrentClients()) {
        hash = (37 * hash) + CHANNELCURRENTCLIENTS_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelCurrentClients());
      }
      if (hasChannelStartTime()) {
        hash = (37 * hash) + CHANNELSTARTTIME_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelStartTime());
      }
      if (hasChannelStopTime()) {
        hash = (37 * hash) + CHANNELSTOPTIME_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelStopTime());
      }
      if (hasChannelVlsIp()) {
        hash = (37 * hash) + CHANNELVLSIP_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelVlsIp());
      }
      if (hasChannelVlsPort()) {
        hash = (37 * hash) + CHANNELVLSPORT_FIELD_NUMBER;
        hash = (53 * hash) + getChannelVlsPort();
      }
      if (hasChannelSendBytes()) {
        hash = (37 * hash) + CHANNELSENDBYTES_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelSendBytes());
      }
      if (hasChannelDownloadRate()) {
        hash = (37 * hash) + CHANNELDOWNLOADRATE_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelDownloadRate());
      }
      if (hasChannelSendRate()) {
        hash = (37 * hash) + CHANNELSENDRATE_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelSendRate());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LiveVlsServerStatusSrv}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrvOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveVlsServerStatusSrv_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveVlsServerStatusSrv_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.class, com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.Builder.class);
      }

      // Construct using com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        channelId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        channelType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        channelStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        channelCurrentClients_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        channelStartTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        channelStopTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        channelVlsIp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        channelVlsPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        channelSendBytes_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        channelDownloadRate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        channelSendRate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveVlsServerStatusSrv_descriptor;
      }

      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv getDefaultInstanceForType() {
        return com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.getDefaultInstance();
      }

      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv build() {
        com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv buildPartial() {
        com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv result = new com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.channelId_ = channelId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channelType_ = channelType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channelStatus_ = channelStatus_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.channelCurrentClients_ = channelCurrentClients_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.channelStartTime_ = channelStartTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.channelStopTime_ = channelStopTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.channelVlsIp_ = channelVlsIp_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.channelVlsPort_ = channelVlsPort_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.channelSendBytes_ = channelSendBytes_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.channelDownloadRate_ = channelDownloadRate_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.channelSendRate_ = channelSendRate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv) {
          return mergeFrom((com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv other) {
        if (other == com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasChannelType()) {
          setChannelType(other.getChannelType());
        }
        if (other.hasChannelStatus()) {
          setChannelStatus(other.getChannelStatus());
        }
        if (other.hasChannelCurrentClients()) {
          setChannelCurrentClients(other.getChannelCurrentClients());
        }
        if (other.hasChannelStartTime()) {
          setChannelStartTime(other.getChannelStartTime());
        }
        if (other.hasChannelStopTime()) {
          setChannelStopTime(other.getChannelStopTime());
        }
        if (other.hasChannelVlsIp()) {
          setChannelVlsIp(other.getChannelVlsIp());
        }
        if (other.hasChannelVlsPort()) {
          setChannelVlsPort(other.getChannelVlsPort());
        }
        if (other.hasChannelSendBytes()) {
          setChannelSendBytes(other.getChannelSendBytes());
        }
        if (other.hasChannelDownloadRate()) {
          setChannelDownloadRate(other.getChannelDownloadRate());
        }
        if (other.hasChannelSendRate()) {
          setChannelSendRate(other.getChannelSendRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.voole.hobbit.proto.LivePB.LiveVlsServerStatusSrv) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 channelId = 1;
      private long channelId_ ;
      /**
       * <code>optional uint64 channelId = 1;</code>
       */
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 channelId = 1;</code>
       */
      public long getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint64 channelId = 1;</code>
       */
      public Builder setChannelId(long value) {
        bitField0_ |= 0x00000001;
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelId = 1;</code>
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 channelType = 2;
      private int channelType_ ;
      /**
       * <code>optional uint32 channelType = 2;</code>
       */
      public boolean hasChannelType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 channelType = 2;</code>
       */
      public int getChannelType() {
        return channelType_;
      }
      /**
       * <code>optional uint32 channelType = 2;</code>
       */
      public Builder setChannelType(int value) {
        bitField0_ |= 0x00000002;
        channelType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channelType = 2;</code>
       */
      public Builder clearChannelType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelType_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 channelStatus = 3;
      private int channelStatus_ ;
      /**
       * <code>optional uint32 channelStatus = 3;</code>
       */
      public boolean hasChannelStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 channelStatus = 3;</code>
       */
      public int getChannelStatus() {
        return channelStatus_;
      }
      /**
       * <code>optional uint32 channelStatus = 3;</code>
       */
      public Builder setChannelStatus(int value) {
        bitField0_ |= 0x00000004;
        channelStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channelStatus = 3;</code>
       */
      public Builder clearChannelStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channelStatus_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 channelCurrentClients = 4;
      private long channelCurrentClients_ ;
      /**
       * <code>optional uint64 channelCurrentClients = 4;</code>
       */
      public boolean hasChannelCurrentClients() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 channelCurrentClients = 4;</code>
       */
      public long getChannelCurrentClients() {
        return channelCurrentClients_;
      }
      /**
       * <code>optional uint64 channelCurrentClients = 4;</code>
       */
      public Builder setChannelCurrentClients(long value) {
        bitField0_ |= 0x00000008;
        channelCurrentClients_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelCurrentClients = 4;</code>
       */
      public Builder clearChannelCurrentClients() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channelCurrentClients_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 channelStartTime = 5;
      private long channelStartTime_ ;
      /**
       * <code>optional uint64 channelStartTime = 5;</code>
       */
      public boolean hasChannelStartTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 channelStartTime = 5;</code>
       */
      public long getChannelStartTime() {
        return channelStartTime_;
      }
      /**
       * <code>optional uint64 channelStartTime = 5;</code>
       */
      public Builder setChannelStartTime(long value) {
        bitField0_ |= 0x00000010;
        channelStartTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelStartTime = 5;</code>
       */
      public Builder clearChannelStartTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        channelStartTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 channelStopTime = 6;
      private long channelStopTime_ ;
      /**
       * <code>optional uint64 channelStopTime = 6;</code>
       */
      public boolean hasChannelStopTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint64 channelStopTime = 6;</code>
       */
      public long getChannelStopTime() {
        return channelStopTime_;
      }
      /**
       * <code>optional uint64 channelStopTime = 6;</code>
       */
      public Builder setChannelStopTime(long value) {
        bitField0_ |= 0x00000020;
        channelStopTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelStopTime = 6;</code>
       */
      public Builder clearChannelStopTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        channelStopTime_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 channelVlsIp = 7;
      private long channelVlsIp_ ;
      /**
       * <code>optional uint64 channelVlsIp = 7;</code>
       */
      public boolean hasChannelVlsIp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 channelVlsIp = 7;</code>
       */
      public long getChannelVlsIp() {
        return channelVlsIp_;
      }
      /**
       * <code>optional uint64 channelVlsIp = 7;</code>
       */
      public Builder setChannelVlsIp(long value) {
        bitField0_ |= 0x00000040;
        channelVlsIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelVlsIp = 7;</code>
       */
      public Builder clearChannelVlsIp() {
        bitField0_ = (bitField0_ & ~0x00000040);
        channelVlsIp_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 channelVlsPort = 8;
      private int channelVlsPort_ ;
      /**
       * <code>optional uint32 channelVlsPort = 8;</code>
       */
      public boolean hasChannelVlsPort() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 channelVlsPort = 8;</code>
       */
      public int getChannelVlsPort() {
        return channelVlsPort_;
      }
      /**
       * <code>optional uint32 channelVlsPort = 8;</code>
       */
      public Builder setChannelVlsPort(int value) {
        bitField0_ |= 0x00000080;
        channelVlsPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 channelVlsPort = 8;</code>
       */
      public Builder clearChannelVlsPort() {
        bitField0_ = (bitField0_ & ~0x00000080);
        channelVlsPort_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 channelSendBytes = 9;
      private long channelSendBytes_ ;
      /**
       * <code>optional uint64 channelSendBytes = 9;</code>
       */
      public boolean hasChannelSendBytes() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 channelSendBytes = 9;</code>
       */
      public long getChannelSendBytes() {
        return channelSendBytes_;
      }
      /**
       * <code>optional uint64 channelSendBytes = 9;</code>
       */
      public Builder setChannelSendBytes(long value) {
        bitField0_ |= 0x00000100;
        channelSendBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelSendBytes = 9;</code>
       */
      public Builder clearChannelSendBytes() {
        bitField0_ = (bitField0_ & ~0x00000100);
        channelSendBytes_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 channelDownloadRate = 10;
      private long channelDownloadRate_ ;
      /**
       * <code>optional uint64 channelDownloadRate = 10;</code>
       */
      public boolean hasChannelDownloadRate() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint64 channelDownloadRate = 10;</code>
       */
      public long getChannelDownloadRate() {
        return channelDownloadRate_;
      }
      /**
       * <code>optional uint64 channelDownloadRate = 10;</code>
       */
      public Builder setChannelDownloadRate(long value) {
        bitField0_ |= 0x00000200;
        channelDownloadRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelDownloadRate = 10;</code>
       */
      public Builder clearChannelDownloadRate() {
        bitField0_ = (bitField0_ & ~0x00000200);
        channelDownloadRate_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 channelSendRate = 11;
      private long channelSendRate_ ;
      /**
       * <code>optional uint64 channelSendRate = 11;</code>
       */
      public boolean hasChannelSendRate() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint64 channelSendRate = 11;</code>
       */
      public long getChannelSendRate() {
        return channelSendRate_;
      }
      /**
       * <code>optional uint64 channelSendRate = 11;</code>
       */
      public Builder setChannelSendRate(long value) {
        bitField0_ |= 0x00000400;
        channelSendRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelSendRate = 11;</code>
       */
      public Builder clearChannelSendRate() {
        bitField0_ = (bitField0_ & ~0x00000400);
        channelSendRate_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LiveVlsServerStatusSrv)
    }

    static {
      defaultInstance = new LiveVlsServerStatusSrv(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LiveVlsServerStatusSrv)
  }

  public interface LiveTrackerChannelSrvOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 channelId = 1;
    /**
     * <code>optional uint64 channelId = 1;</code>
     */
    boolean hasChannelId();
    /**
     * <code>optional uint64 channelId = 1;</code>
     */
    long getChannelId();

    // optional uint64 channelUserNum = 2;
    /**
     * <code>optional uint64 channelUserNum = 2;</code>
     */
    boolean hasChannelUserNum();
    /**
     * <code>optional uint64 channelUserNum = 2;</code>
     */
    long getChannelUserNum();
  }
  /**
   * Protobuf type {@code LiveTrackerChannelSrv}
   */
  public static final class LiveTrackerChannelSrv extends
      com.google.protobuf.GeneratedMessage
      implements LiveTrackerChannelSrvOrBuilder {
    // Use LiveTrackerChannelSrv.newBuilder() to construct.
    private LiveTrackerChannelSrv(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiveTrackerChannelSrv(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiveTrackerChannelSrv defaultInstance;
    public static LiveTrackerChannelSrv getDefaultInstance() {
      return defaultInstance;
    }

    public LiveTrackerChannelSrv getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiveTrackerChannelSrv(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              channelId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channelUserNum_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerChannelSrv_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerChannelSrv_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.class, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder.class);
    }

    public static com.google.protobuf.Parser<LiveTrackerChannelSrv> PARSER =
        new com.google.protobuf.AbstractParser<LiveTrackerChannelSrv>() {
      public LiveTrackerChannelSrv parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiveTrackerChannelSrv(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiveTrackerChannelSrv> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 channelId = 1;
    public static final int CHANNELID_FIELD_NUMBER = 1;
    private long channelId_;
    /**
     * <code>optional uint64 channelId = 1;</code>
     */
    public boolean hasChannelId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 channelId = 1;</code>
     */
    public long getChannelId() {
      return channelId_;
    }

    // optional uint64 channelUserNum = 2;
    public static final int CHANNELUSERNUM_FIELD_NUMBER = 2;
    private long channelUserNum_;
    /**
     * <code>optional uint64 channelUserNum = 2;</code>
     */
    public boolean hasChannelUserNum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 channelUserNum = 2;</code>
     */
    public long getChannelUserNum() {
      return channelUserNum_;
    }

    private void initFields() {
      channelId_ = 0L;
      channelUserNum_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, channelUserNum_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, channelId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, channelUserNum_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv)) {
        return super.equals(obj);
      }
      com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv other = (com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv) obj;

      boolean result = true;
      result = result && (hasChannelId() == other.hasChannelId());
      if (hasChannelId()) {
        result = result && (getChannelId()
            == other.getChannelId());
      }
      result = result && (hasChannelUserNum() == other.hasChannelUserNum());
      if (hasChannelUserNum()) {
        result = result && (getChannelUserNum()
            == other.getChannelUserNum());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    private int memoizedHashCode = 0;
    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasChannelId()) {
        hash = (37 * hash) + CHANNELID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelId());
      }
      if (hasChannelUserNum()) {
        hash = (37 * hash) + CHANNELUSERNUM_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelUserNum());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LiveTrackerChannelSrv}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrvOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerChannelSrv_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerChannelSrv_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.class, com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.Builder.class);
      }

      // Construct using com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        channelId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        channelUserNum_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerChannelSrv_descriptor;
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv getDefaultInstanceForType() {
        return com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.getDefaultInstance();
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv build() {
        com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv buildPartial() {
        com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv result = new com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.channelId_ = channelId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channelUserNum_ = channelUserNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv) {
          return mergeFrom((com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv other) {
        if (other == com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv.getDefaultInstance()) return this;
        if (other.hasChannelId()) {
          setChannelId(other.getChannelId());
        }
        if (other.hasChannelUserNum()) {
          setChannelUserNum(other.getChannelUserNum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.voole.hobbit.proto.LivePB.LiveTrackerChannelSrv) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 channelId = 1;
      private long channelId_ ;
      /**
       * <code>optional uint64 channelId = 1;</code>
       */
      public boolean hasChannelId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 channelId = 1;</code>
       */
      public long getChannelId() {
        return channelId_;
      }
      /**
       * <code>optional uint64 channelId = 1;</code>
       */
      public Builder setChannelId(long value) {
        bitField0_ |= 0x00000001;
        channelId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelId = 1;</code>
       */
      public Builder clearChannelId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        channelId_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 channelUserNum = 2;
      private long channelUserNum_ ;
      /**
       * <code>optional uint64 channelUserNum = 2;</code>
       */
      public boolean hasChannelUserNum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 channelUserNum = 2;</code>
       */
      public long getChannelUserNum() {
        return channelUserNum_;
      }
      /**
       * <code>optional uint64 channelUserNum = 2;</code>
       */
      public Builder setChannelUserNum(long value) {
        bitField0_ |= 0x00000002;
        channelUserNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelUserNum = 2;</code>
       */
      public Builder clearChannelUserNum() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channelUserNum_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LiveTrackerChannelSrv)
    }

    static {
      defaultInstance = new LiveTrackerChannelSrv(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LiveTrackerChannelSrv)
  }

  public interface LiveTrackerBadclientOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint64 trackerId = 1;
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    boolean hasTrackerId();
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    long getTrackerId();

    // optional string uuid = 2;
    /**
     * <code>optional string uuid = 2;</code>
     */
    boolean hasUuid();
    /**
     * <code>optional string uuid = 2;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>optional string uuid = 2;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // optional string uid = 3;
    /**
     * <code>optional string uid = 3;</code>
     */
    boolean hasUid();
    /**
     * <code>optional string uid = 3;</code>
     */
    java.lang.String getUid();
    /**
     * <code>optional string uid = 3;</code>
     */
    com.google.protobuf.ByteString
        getUidBytes();

    // optional uint64 channelid = 4;
    /**
     * <code>optional uint64 channelid = 4;</code>
     */
    boolean hasChannelid();
    /**
     * <code>optional uint64 channelid = 4;</code>
     */
    long getChannelid();

    // optional uint64 ip = 5;
    /**
     * <code>optional uint64 ip = 5;</code>
     */
    boolean hasIp();
    /**
     * <code>optional uint64 ip = 5;</code>
     */
    long getIp();

    // optional uint32 port = 6;
    /**
     * <code>optional uint32 port = 6;</code>
     */
    boolean hasPort();
    /**
     * <code>optional uint32 port = 6;</code>
     */
    int getPort();

    // optional uint64 ip1 = 7;
    /**
     * <code>optional uint64 ip1 = 7;</code>
     */
    boolean hasIp1();
    /**
     * <code>optional uint64 ip1 = 7;</code>
     */
    long getIp1();

    // optional uint32 port1 = 8;
    /**
     * <code>optional uint32 port1 = 8;</code>
     */
    boolean hasPort1();
    /**
     * <code>optional uint32 port1 = 8;</code>
     */
    int getPort1();

    // optional uint64 provinceid = 9;
    /**
     * <code>optional uint64 provinceid = 9;</code>
     */
    boolean hasProvinceid();
    /**
     * <code>optional uint64 provinceid = 9;</code>
     */
    long getProvinceid();

    // optional uint64 cityid = 10;
    /**
     * <code>optional uint64 cityid = 10;</code>
     */
    boolean hasCityid();
    /**
     * <code>optional uint64 cityid = 10;</code>
     */
    long getCityid();

    // optional uint64 netid = 11;
    /**
     * <code>optional uint64 netid = 11;</code>
     */
    boolean hasNetid();
    /**
     * <code>optional uint64 netid = 11;</code>
     */
    long getNetid();

    // optional uint64 userType = 12;
    /**
     * <code>optional uint64 userType = 12;</code>
     */
    boolean hasUserType();
    /**
     * <code>optional uint64 userType = 12;</code>
     */
    long getUserType();

    // optional uint64 oemid = 13;
    /**
     * <code>optional uint64 oemid = 13;</code>
     */
    boolean hasOemid();
    /**
     * <code>optional uint64 oemid = 13;</code>
     */
    long getOemid();

    // optional uint64 ver = 14;
    /**
     * <code>optional uint64 ver = 14;</code>
     */
    boolean hasVer();
    /**
     * <code>optional uint64 ver = 14;</code>
     */
    long getVer();

    // optional uint64 getuserCount = 15;
    /**
     * <code>optional uint64 getuserCount = 15;</code>
     */
    boolean hasGetuserCount();
    /**
     * <code>optional uint64 getuserCount = 15;</code>
     */
    long getGetuserCount();
  }
  /**
   * Protobuf type {@code LiveTrackerBadclient}
   */
  public static final class LiveTrackerBadclient extends
      com.google.protobuf.GeneratedMessage
      implements LiveTrackerBadclientOrBuilder {
    // Use LiveTrackerBadclient.newBuilder() to construct.
    private LiveTrackerBadclient(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LiveTrackerBadclient(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LiveTrackerBadclient defaultInstance;
    public static LiveTrackerBadclient getDefaultInstance() {
      return defaultInstance;
    }

    public LiveTrackerBadclient getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LiveTrackerBadclient(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              trackerId_ = input.readUInt64();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              uuid_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              uid_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              channelid_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              ip_ = input.readUInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              port_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              ip1_ = input.readUInt64();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              port1_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              provinceid_ = input.readUInt64();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              cityid_ = input.readUInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              netid_ = input.readUInt64();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              userType_ = input.readUInt64();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              oemid_ = input.readUInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              ver_ = input.readUInt64();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              getuserCount_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerBadclient_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerBadclient_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.voole.hobbit.proto.LivePB.LiveTrackerBadclient.class, com.voole.hobbit.proto.LivePB.LiveTrackerBadclient.Builder.class);
    }

    public static com.google.protobuf.Parser<LiveTrackerBadclient> PARSER =
        new com.google.protobuf.AbstractParser<LiveTrackerBadclient>() {
      public LiveTrackerBadclient parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LiveTrackerBadclient(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LiveTrackerBadclient> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint64 trackerId = 1;
    public static final int TRACKERID_FIELD_NUMBER = 1;
    private long trackerId_;
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    public boolean hasTrackerId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 trackerId = 1;</code>
     */
    public long getTrackerId() {
      return trackerId_;
    }

    // optional string uuid = 2;
    public static final int UUID_FIELD_NUMBER = 2;
    private java.lang.Object uuid_;
    /**
     * <code>optional string uuid = 2;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string uuid = 2;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uuid = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string uid = 3;
    public static final int UID_FIELD_NUMBER = 3;
    private java.lang.Object uid_;
    /**
     * <code>optional string uid = 3;</code>
     */
    public boolean hasUid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string uid = 3;</code>
     */
    public java.lang.String getUid() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getUidBytes() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional uint64 channelid = 4;
    public static final int CHANNELID_FIELD_NUMBER = 4;
    private long channelid_;
    /**
     * <code>optional uint64 channelid = 4;</code>
     */
    public boolean hasChannelid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 channelid = 4;</code>
     */
    public long getChannelid() {
      return channelid_;
    }

    // optional uint64 ip = 5;
    public static final int IP_FIELD_NUMBER = 5;
    private long ip_;
    /**
     * <code>optional uint64 ip = 5;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 ip = 5;</code>
     */
    public long getIp() {
      return ip_;
    }

    // optional uint32 port = 6;
    public static final int PORT_FIELD_NUMBER = 6;
    private int port_;
    /**
     * <code>optional uint32 port = 6;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 port = 6;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional uint64 ip1 = 7;
    public static final int IP1_FIELD_NUMBER = 7;
    private long ip1_;
    /**
     * <code>optional uint64 ip1 = 7;</code>
     */
    public boolean hasIp1() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 ip1 = 7;</code>
     */
    public long getIp1() {
      return ip1_;
    }

    // optional uint32 port1 = 8;
    public static final int PORT1_FIELD_NUMBER = 8;
    private int port1_;
    /**
     * <code>optional uint32 port1 = 8;</code>
     */
    public boolean hasPort1() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 port1 = 8;</code>
     */
    public int getPort1() {
      return port1_;
    }

    // optional uint64 provinceid = 9;
    public static final int PROVINCEID_FIELD_NUMBER = 9;
    private long provinceid_;
    /**
     * <code>optional uint64 provinceid = 9;</code>
     */
    public boolean hasProvinceid() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 provinceid = 9;</code>
     */
    public long getProvinceid() {
      return provinceid_;
    }

    // optional uint64 cityid = 10;
    public static final int CITYID_FIELD_NUMBER = 10;
    private long cityid_;
    /**
     * <code>optional uint64 cityid = 10;</code>
     */
    public boolean hasCityid() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint64 cityid = 10;</code>
     */
    public long getCityid() {
      return cityid_;
    }

    // optional uint64 netid = 11;
    public static final int NETID_FIELD_NUMBER = 11;
    private long netid_;
    /**
     * <code>optional uint64 netid = 11;</code>
     */
    public boolean hasNetid() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint64 netid = 11;</code>
     */
    public long getNetid() {
      return netid_;
    }

    // optional uint64 userType = 12;
    public static final int USERTYPE_FIELD_NUMBER = 12;
    private long userType_;
    /**
     * <code>optional uint64 userType = 12;</code>
     */
    public boolean hasUserType() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint64 userType = 12;</code>
     */
    public long getUserType() {
      return userType_;
    }

    // optional uint64 oemid = 13;
    public static final int OEMID_FIELD_NUMBER = 13;
    private long oemid_;
    /**
     * <code>optional uint64 oemid = 13;</code>
     */
    public boolean hasOemid() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint64 oemid = 13;</code>
     */
    public long getOemid() {
      return oemid_;
    }

    // optional uint64 ver = 14;
    public static final int VER_FIELD_NUMBER = 14;
    private long ver_;
    /**
     * <code>optional uint64 ver = 14;</code>
     */
    public boolean hasVer() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint64 ver = 14;</code>
     */
    public long getVer() {
      return ver_;
    }

    // optional uint64 getuserCount = 15;
    public static final int GETUSERCOUNT_FIELD_NUMBER = 15;
    private long getuserCount_;
    /**
     * <code>optional uint64 getuserCount = 15;</code>
     */
    public boolean hasGetuserCount() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint64 getuserCount = 15;</code>
     */
    public long getGetuserCount() {
      return getuserCount_;
    }

    private void initFields() {
      trackerId_ = 0L;
      uuid_ = "";
      uid_ = "";
      channelid_ = 0L;
      ip_ = 0L;
      port_ = 0;
      ip1_ = 0L;
      port1_ = 0;
      provinceid_ = 0L;
      cityid_ = 0L;
      netid_ = 0L;
      userType_ = 0L;
      oemid_ = 0L;
      ver_ = 0L;
      getuserCount_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, trackerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUuidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getUidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, channelid_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, ip_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, port_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, ip1_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, port1_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(9, provinceid_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt64(10, cityid_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt64(11, netid_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt64(12, userType_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt64(13, oemid_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt64(14, ver_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt64(15, getuserCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, trackerId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUuidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getUidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, channelid_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, ip_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, port_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, ip1_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, port1_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, provinceid_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, cityid_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, netid_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(12, userType_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(13, oemid_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(14, ver_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(15, getuserCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.voole.hobbit.proto.LivePB.LiveTrackerBadclient)) {
        return super.equals(obj);
      }
      com.voole.hobbit.proto.LivePB.LiveTrackerBadclient other = (com.voole.hobbit.proto.LivePB.LiveTrackerBadclient) obj;

      boolean result = true;
      result = result && (hasTrackerId() == other.hasTrackerId());
      if (hasTrackerId()) {
        result = result && (getTrackerId()
            == other.getTrackerId());
      }
      result = result && (hasUuid() == other.hasUuid());
      if (hasUuid()) {
        result = result && getUuid()
            .equals(other.getUuid());
      }
      result = result && (hasUid() == other.hasUid());
      if (hasUid()) {
        result = result && getUid()
            .equals(other.getUid());
      }
      result = result && (hasChannelid() == other.hasChannelid());
      if (hasChannelid()) {
        result = result && (getChannelid()
            == other.getChannelid());
      }
      result = result && (hasIp() == other.hasIp());
      if (hasIp()) {
        result = result && (getIp()
            == other.getIp());
      }
      result = result && (hasPort() == other.hasPort());
      if (hasPort()) {
        result = result && (getPort()
            == other.getPort());
      }
      result = result && (hasIp1() == other.hasIp1());
      if (hasIp1()) {
        result = result && (getIp1()
            == other.getIp1());
      }
      result = result && (hasPort1() == other.hasPort1());
      if (hasPort1()) {
        result = result && (getPort1()
            == other.getPort1());
      }
      result = result && (hasProvinceid() == other.hasProvinceid());
      if (hasProvinceid()) {
        result = result && (getProvinceid()
            == other.getProvinceid());
      }
      result = result && (hasCityid() == other.hasCityid());
      if (hasCityid()) {
        result = result && (getCityid()
            == other.getCityid());
      }
      result = result && (hasNetid() == other.hasNetid());
      if (hasNetid()) {
        result = result && (getNetid()
            == other.getNetid());
      }
      result = result && (hasUserType() == other.hasUserType());
      if (hasUserType()) {
        result = result && (getUserType()
            == other.getUserType());
      }
      result = result && (hasOemid() == other.hasOemid());
      if (hasOemid()) {
        result = result && (getOemid()
            == other.getOemid());
      }
      result = result && (hasVer() == other.hasVer());
      if (hasVer()) {
        result = result && (getVer()
            == other.getVer());
      }
      result = result && (hasGetuserCount() == other.hasGetuserCount());
      if (hasGetuserCount()) {
        result = result && (getGetuserCount()
            == other.getGetuserCount());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    private int memoizedHashCode = 0;
    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasTrackerId()) {
        hash = (37 * hash) + TRACKERID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getTrackerId());
      }
      if (hasUuid()) {
        hash = (37 * hash) + UUID_FIELD_NUMBER;
        hash = (53 * hash) + getUuid().hashCode();
      }
      if (hasUid()) {
        hash = (37 * hash) + UID_FIELD_NUMBER;
        hash = (53 * hash) + getUid().hashCode();
      }
      if (hasChannelid()) {
        hash = (37 * hash) + CHANNELID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getChannelid());
      }
      if (hasIp()) {
        hash = (37 * hash) + IP_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getIp());
      }
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort();
      }
      if (hasIp1()) {
        hash = (37 * hash) + IP1_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getIp1());
      }
      if (hasPort1()) {
        hash = (37 * hash) + PORT1_FIELD_NUMBER;
        hash = (53 * hash) + getPort1();
      }
      if (hasProvinceid()) {
        hash = (37 * hash) + PROVINCEID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getProvinceid());
      }
      if (hasCityid()) {
        hash = (37 * hash) + CITYID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getCityid());
      }
      if (hasNetid()) {
        hash = (37 * hash) + NETID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getNetid());
      }
      if (hasUserType()) {
        hash = (37 * hash) + USERTYPE_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getUserType());
      }
      if (hasOemid()) {
        hash = (37 * hash) + OEMID_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getOemid());
      }
      if (hasVer()) {
        hash = (37 * hash) + VER_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getVer());
      }
      if (hasGetuserCount()) {
        hash = (37 * hash) + GETUSERCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + hashLong(getGetuserCount());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.voole.hobbit.proto.LivePB.LiveTrackerBadclient prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code LiveTrackerBadclient}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.voole.hobbit.proto.LivePB.LiveTrackerBadclientOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerBadclient_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerBadclient_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.voole.hobbit.proto.LivePB.LiveTrackerBadclient.class, com.voole.hobbit.proto.LivePB.LiveTrackerBadclient.Builder.class);
      }

      // Construct using com.voole.hobbit.proto.LivePB.LiveTrackerBadclient.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        trackerId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        uid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        channelid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        ip_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        ip1_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        port1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        provinceid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        cityid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        netid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        userType_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        oemid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        ver_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        getuserCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.voole.hobbit.proto.LivePB.internal_static_LiveTrackerBadclient_descriptor;
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerBadclient getDefaultInstanceForType() {
        return com.voole.hobbit.proto.LivePB.LiveTrackerBadclient.getDefaultInstance();
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerBadclient build() {
        com.voole.hobbit.proto.LivePB.LiveTrackerBadclient result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.voole.hobbit.proto.LivePB.LiveTrackerBadclient buildPartial() {
        com.voole.hobbit.proto.LivePB.LiveTrackerBadclient result = new com.voole.hobbit.proto.LivePB.LiveTrackerBadclient(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.trackerId_ = trackerId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.uid_ = uid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.channelid_ = channelid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.ip1_ = ip1_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.port1_ = port1_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.provinceid_ = provinceid_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.cityid_ = cityid_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.netid_ = netid_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.userType_ = userType_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.oemid_ = oemid_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.ver_ = ver_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.getuserCount_ = getuserCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.voole.hobbit.proto.LivePB.LiveTrackerBadclient) {
          return mergeFrom((com.voole.hobbit.proto.LivePB.LiveTrackerBadclient)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.voole.hobbit.proto.LivePB.LiveTrackerBadclient other) {
        if (other == com.voole.hobbit.proto.LivePB.LiveTrackerBadclient.getDefaultInstance()) return this;
        if (other.hasTrackerId()) {
          setTrackerId(other.getTrackerId());
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00000002;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasUid()) {
          bitField0_ |= 0x00000004;
          uid_ = other.uid_;
          onChanged();
        }
        if (other.hasChannelid()) {
          setChannelid(other.getChannelid());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasIp1()) {
          setIp1(other.getIp1());
        }
        if (other.hasPort1()) {
          setPort1(other.getPort1());
        }
        if (other.hasProvinceid()) {
          setProvinceid(other.getProvinceid());
        }
        if (other.hasCityid()) {
          setCityid(other.getCityid());
        }
        if (other.hasNetid()) {
          setNetid(other.getNetid());
        }
        if (other.hasUserType()) {
          setUserType(other.getUserType());
        }
        if (other.hasOemid()) {
          setOemid(other.getOemid());
        }
        if (other.hasVer()) {
          setVer(other.getVer());
        }
        if (other.hasGetuserCount()) {
          setGetuserCount(other.getGetuserCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.voole.hobbit.proto.LivePB.LiveTrackerBadclient parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.voole.hobbit.proto.LivePB.LiveTrackerBadclient) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint64 trackerId = 1;
      private long trackerId_ ;
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public boolean hasTrackerId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public long getTrackerId() {
        return trackerId_;
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public Builder setTrackerId(long value) {
        bitField0_ |= 0x00000001;
        trackerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 trackerId = 1;</code>
       */
      public Builder clearTrackerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        trackerId_ = 0L;
        onChanged();
        return this;
      }

      // optional string uuid = 2;
      private java.lang.Object uuid_ = "";
      /**
       * <code>optional string uuid = 2;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 2;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        uuid_ = value;
        onChanged();
        return this;
      }

      // optional string uid = 3;
      private java.lang.Object uid_ = "";
      /**
       * <code>optional string uid = 3;</code>
       */
      public boolean hasUid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public java.lang.String getUid() {
        java.lang.Object ref = uid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public com.google.protobuf.ByteString
          getUidBytes() {
        java.lang.Object ref = uid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public Builder setUid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        uid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        uid_ = getDefaultInstance().getUid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uid = 3;</code>
       */
      public Builder setUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        uid_ = value;
        onChanged();
        return this;
      }

      // optional uint64 channelid = 4;
      private long channelid_ ;
      /**
       * <code>optional uint64 channelid = 4;</code>
       */
      public boolean hasChannelid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint64 channelid = 4;</code>
       */
      public long getChannelid() {
        return channelid_;
      }
      /**
       * <code>optional uint64 channelid = 4;</code>
       */
      public Builder setChannelid(long value) {
        bitField0_ |= 0x00000008;
        channelid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 channelid = 4;</code>
       */
      public Builder clearChannelid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channelid_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 ip = 5;
      private long ip_ ;
      /**
       * <code>optional uint64 ip = 5;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 ip = 5;</code>
       */
      public long getIp() {
        return ip_;
      }
      /**
       * <code>optional uint64 ip = 5;</code>
       */
      public Builder setIp(long value) {
        bitField0_ |= 0x00000010;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ip = 5;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ip_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 port = 6;
      private int port_ ;
      /**
       * <code>optional uint32 port = 6;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 port = 6;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional uint32 port = 6;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000020;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 port = 6;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 ip1 = 7;
      private long ip1_ ;
      /**
       * <code>optional uint64 ip1 = 7;</code>
       */
      public boolean hasIp1() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 ip1 = 7;</code>
       */
      public long getIp1() {
        return ip1_;
      }
      /**
       * <code>optional uint64 ip1 = 7;</code>
       */
      public Builder setIp1(long value) {
        bitField0_ |= 0x00000040;
        ip1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ip1 = 7;</code>
       */
      public Builder clearIp1() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ip1_ = 0L;
        onChanged();
        return this;
      }

      // optional uint32 port1 = 8;
      private int port1_ ;
      /**
       * <code>optional uint32 port1 = 8;</code>
       */
      public boolean hasPort1() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 port1 = 8;</code>
       */
      public int getPort1() {
        return port1_;
      }
      /**
       * <code>optional uint32 port1 = 8;</code>
       */
      public Builder setPort1(int value) {
        bitField0_ |= 0x00000080;
        port1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 port1 = 8;</code>
       */
      public Builder clearPort1() {
        bitField0_ = (bitField0_ & ~0x00000080);
        port1_ = 0;
        onChanged();
        return this;
      }

      // optional uint64 provinceid = 9;
      private long provinceid_ ;
      /**
       * <code>optional uint64 provinceid = 9;</code>
       */
      public boolean hasProvinceid() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint64 provinceid = 9;</code>
       */
      public long getProvinceid() {
        return provinceid_;
      }
      /**
       * <code>optional uint64 provinceid = 9;</code>
       */
      public Builder setProvinceid(long value) {
        bitField0_ |= 0x00000100;
        provinceid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 provinceid = 9;</code>
       */
      public Builder clearProvinceid() {
        bitField0_ = (bitField0_ & ~0x00000100);
        provinceid_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 cityid = 10;
      private long cityid_ ;
      /**
       * <code>optional uint64 cityid = 10;</code>
       */
      public boolean hasCityid() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint64 cityid = 10;</code>
       */
      public long getCityid() {
        return cityid_;
      }
      /**
       * <code>optional uint64 cityid = 10;</code>
       */
      public Builder setCityid(long value) {
        bitField0_ |= 0x00000200;
        cityid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 cityid = 10;</code>
       */
      public Builder clearCityid() {
        bitField0_ = (bitField0_ & ~0x00000200);
        cityid_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 netid = 11;
      private long netid_ ;
      /**
       * <code>optional uint64 netid = 11;</code>
       */
      public boolean hasNetid() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint64 netid = 11;</code>
       */
      public long getNetid() {
        return netid_;
      }
      /**
       * <code>optional uint64 netid = 11;</code>
       */
      public Builder setNetid(long value) {
        bitField0_ |= 0x00000400;
        netid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 netid = 11;</code>
       */
      public Builder clearNetid() {
        bitField0_ = (bitField0_ & ~0x00000400);
        netid_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 userType = 12;
      private long userType_ ;
      /**
       * <code>optional uint64 userType = 12;</code>
       */
      public boolean hasUserType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint64 userType = 12;</code>
       */
      public long getUserType() {
        return userType_;
      }
      /**
       * <code>optional uint64 userType = 12;</code>
       */
      public Builder setUserType(long value) {
        bitField0_ |= 0x00000800;
        userType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 userType = 12;</code>
       */
      public Builder clearUserType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        userType_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 oemid = 13;
      private long oemid_ ;
      /**
       * <code>optional uint64 oemid = 13;</code>
       */
      public boolean hasOemid() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint64 oemid = 13;</code>
       */
      public long getOemid() {
        return oemid_;
      }
      /**
       * <code>optional uint64 oemid = 13;</code>
       */
      public Builder setOemid(long value) {
        bitField0_ |= 0x00001000;
        oemid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 oemid = 13;</code>
       */
      public Builder clearOemid() {
        bitField0_ = (bitField0_ & ~0x00001000);
        oemid_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 ver = 14;
      private long ver_ ;
      /**
       * <code>optional uint64 ver = 14;</code>
       */
      public boolean hasVer() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint64 ver = 14;</code>
       */
      public long getVer() {
        return ver_;
      }
      /**
       * <code>optional uint64 ver = 14;</code>
       */
      public Builder setVer(long value) {
        bitField0_ |= 0x00002000;
        ver_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ver = 14;</code>
       */
      public Builder clearVer() {
        bitField0_ = (bitField0_ & ~0x00002000);
        ver_ = 0L;
        onChanged();
        return this;
      }

      // optional uint64 getuserCount = 15;
      private long getuserCount_ ;
      /**
       * <code>optional uint64 getuserCount = 15;</code>
       */
      public boolean hasGetuserCount() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint64 getuserCount = 15;</code>
       */
      public long getGetuserCount() {
        return getuserCount_;
      }
      /**
       * <code>optional uint64 getuserCount = 15;</code>
       */
      public Builder setGetuserCount(long value) {
        bitField0_ |= 0x00004000;
        getuserCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 getuserCount = 15;</code>
       */
      public Builder clearGetuserCount() {
        bitField0_ = (bitField0_ & ~0x00004000);
        getuserCount_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:LiveTrackerBadclient)
    }

    static {
      defaultInstance = new LiveTrackerBadclient(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:LiveTrackerBadclient)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LiveVlsServerStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LiveVlsServerStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LiveTrackerChannel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LiveTrackerChannel_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LiveTrackerFailget_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LiveTrackerFailget_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LiveTrackerFaillogin_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LiveTrackerFaillogin_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LiveVlsServerStatusSrv_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LiveVlsServerStatusSrv_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LiveTrackerChannelSrv_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LiveTrackerChannelSrv_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LiveTrackerBadclient_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LiveTrackerBadclient_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%src/main/resources/proto/LivePB.proto\"" +
      "\333\002\n\023LiveVlsServerStatus\022\r\n\005vlsId\030\001 \001(\004\022\017" +
      "\n\007vlsType\030\002 \001(\r\022\021\n\tvlsStatus\030\003 \001(\r\022\026\n\016vl" +
      "sDescription\030\004 \001(\t\022\r\n\005vlsIp\030\005 \001(\004\022\023\n\013vls" +
      "HttpPort\030\006 \001(\r\022\023\n\013vlsLivePort\030\007 \001(\r\022\024\n\014v" +
      "lsStartTime\030\010 \001(\004\022\025\n\rvlsAllClients\030\t \001(\004" +
      "\022\031\n\021vlsAllStreamBytes\030\n \001(\004\022\027\n\017vlsDownlo" +
      "adRate\030\013 \001(\004\022\023\n\013vlsSendRate\030\014 \001(\004\022\034\n\024vls" +
      "EffectiveChannels\030\r \001(\004\022,\n\013attachments\030\016" +
      " \003(\0132\027.LiveVlsServerStatusSrv\"j\n\022LiveTra",
      "ckerChannel\022\021\n\ttrackerId\030\001 \001(\004\022\024\n\014channe" +
      "lCount\030\002 \001(\004\022+\n\013attachments\030\003 \003(\0132\026.Live" +
      "TrackerChannelSrv\"\261\001\n\022LiveTrackerFailget" +
      "\022\021\n\ttrackerId\030\001 \001(\004\022\014\n\004uuid\030\002 \001(\t\022\013\n\003uid" +
      "\030\003 \001(\t\022\020\n\010userType\030\004 \001(\004\022\n\n\002ip\030\005 \001(\004\022\014\n\004" +
      "port\030\006 \001(\r\022\021\n\tchannelid\030\007 \001(\004\022\017\n\007errCode" +
      "\030\010 \001(\004\022\017\n\007authLen\030\t \001(\004\022\014\n\004auth\030\n \001(\t\"\320\001" +
      "\n\024LiveTrackerFaillogin\022\021\n\ttrackerId\030\001 \001(" +
      "\004\022\014\n\004uuid\030\002 \001(\t\022\013\n\003uid\030\003 \001(\t\022\020\n\010userType" +
      "\030\004 \001(\004\022\r\n\005oemid\030\005 \001(\004\022\r\n\005vipid\030\006 \001(\004\022\n\n\002",
      "ip\030\007 \001(\004\022\014\n\004port\030\010 \001(\r\022\013\n\003ip1\030\t \001(\004\022\r\n\005p" +
      "ort1\030\n \001(\r\022\021\n\tchannelid\030\013 \001(\004\022\021\n\terrorCo" +
      "de\030\014 \001(\004\"\247\002\n\026LiveVlsServerStatusSrv\022\021\n\tc" +
      "hannelId\030\001 \001(\004\022\023\n\013channelType\030\002 \001(\r\022\025\n\rc" +
      "hannelStatus\030\003 \001(\r\022\035\n\025channelCurrentClie" +
      "nts\030\004 \001(\004\022\030\n\020channelStartTime\030\005 \001(\004\022\027\n\017c" +
      "hannelStopTime\030\006 \001(\004\022\024\n\014channelVlsIp\030\007 \001" +
      "(\004\022\026\n\016channelVlsPort\030\010 \001(\r\022\030\n\020channelSen" +
      "dBytes\030\t \001(\004\022\033\n\023channelDownloadRate\030\n \001(" +
      "\004\022\027\n\017channelSendRate\030\013 \001(\004\"B\n\025LiveTracke",
      "rChannelSrv\022\021\n\tchannelId\030\001 \001(\004\022\026\n\016channe" +
      "lUserNum\030\002 \001(\004\"\204\002\n\024LiveTrackerBadclient\022" +
      "\021\n\ttrackerId\030\001 \001(\004\022\014\n\004uuid\030\002 \001(\t\022\013\n\003uid\030" +
      "\003 \001(\t\022\021\n\tchannelid\030\004 \001(\004\022\n\n\002ip\030\005 \001(\004\022\014\n\004" +
      "port\030\006 \001(\r\022\013\n\003ip1\030\007 \001(\004\022\r\n\005port1\030\010 \001(\r\022\022" +
      "\n\nprovinceid\030\t \001(\004\022\016\n\006cityid\030\n \001(\004\022\r\n\005ne" +
      "tid\030\013 \001(\004\022\020\n\010userType\030\014 \001(\004\022\r\n\005oemid\030\r \001" +
      "(\004\022\013\n\003ver\030\016 \001(\004\022\024\n\014getuserCount\030\017 \001(\004B\033\n" +
      "\026com.voole.hobbit.proto\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_LiveVlsServerStatus_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_LiveVlsServerStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LiveVlsServerStatus_descriptor,
              new java.lang.String[] { "VlsId", "VlsType", "VlsStatus", "VlsDescription", "VlsIp", "VlsHttpPort", "VlsLivePort", "VlsStartTime", "VlsAllClients", "VlsAllStreamBytes", "VlsDownloadRate", "VlsSendRate", "VlsEffectiveChannels", "Attachments", });
          internal_static_LiveTrackerChannel_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_LiveTrackerChannel_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LiveTrackerChannel_descriptor,
              new java.lang.String[] { "TrackerId", "ChannelCount", "Attachments", });
          internal_static_LiveTrackerFailget_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_LiveTrackerFailget_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LiveTrackerFailget_descriptor,
              new java.lang.String[] { "TrackerId", "Uuid", "Uid", "UserType", "Ip", "Port", "Channelid", "ErrCode", "AuthLen", "Auth", });
          internal_static_LiveTrackerFaillogin_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_LiveTrackerFaillogin_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LiveTrackerFaillogin_descriptor,
              new java.lang.String[] { "TrackerId", "Uuid", "Uid", "UserType", "Oemid", "Vipid", "Ip", "Port", "Ip1", "Port1", "Channelid", "ErrorCode", });
          internal_static_LiveVlsServerStatusSrv_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_LiveVlsServerStatusSrv_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LiveVlsServerStatusSrv_descriptor,
              new java.lang.String[] { "ChannelId", "ChannelType", "ChannelStatus", "ChannelCurrentClients", "ChannelStartTime", "ChannelStopTime", "ChannelVlsIp", "ChannelVlsPort", "ChannelSendBytes", "ChannelDownloadRate", "ChannelSendRate", });
          internal_static_LiveTrackerChannelSrv_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_LiveTrackerChannelSrv_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LiveTrackerChannelSrv_descriptor,
              new java.lang.String[] { "ChannelId", "ChannelUserNum", });
          internal_static_LiveTrackerBadclient_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_LiveTrackerBadclient_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LiveTrackerBadclient_descriptor,
              new java.lang.String[] { "TrackerId", "Uuid", "Uid", "Channelid", "Ip", "Port", "Ip1", "Port1", "Provinceid", "Cityid", "Netid", "UserType", "Oemid", "Ver", "GetuserCount", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}

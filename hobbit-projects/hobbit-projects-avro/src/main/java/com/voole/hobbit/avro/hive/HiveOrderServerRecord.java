/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.voole.hobbit.avro.hive;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class HiveOrderServerRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HiveOrderServerRecord\",\"namespace\":\"com.voole.hobbit.avro.hive\",\"fields\":[{\"name\":\"sessID\",\"type\":\"string\"},{\"name\":\"playAliveTime\",\"type\":[\"long\",\"null\"]},{\"name\":\"srvIP\",\"type\":[\"long\",\"null\"]},{\"name\":\"avgSpeed\",\"type\":[\"long\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence sessID;
  @Deprecated public java.lang.Long playAliveTime;
  @Deprecated public java.lang.Long srvIP;
  @Deprecated public java.lang.Long avgSpeed;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public HiveOrderServerRecord() {}

  /**
   * All-args constructor.
   */
  public HiveOrderServerRecord(java.lang.CharSequence sessID, java.lang.Long playAliveTime, java.lang.Long srvIP, java.lang.Long avgSpeed) {
    this.sessID = sessID;
    this.playAliveTime = playAliveTime;
    this.srvIP = srvIP;
    this.avgSpeed = avgSpeed;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sessID;
    case 1: return playAliveTime;
    case 2: return srvIP;
    case 3: return avgSpeed;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sessID = (java.lang.CharSequence)value$; break;
    case 1: playAliveTime = (java.lang.Long)value$; break;
    case 2: srvIP = (java.lang.Long)value$; break;
    case 3: avgSpeed = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sessID' field.
   */
  public java.lang.CharSequence getSessID() {
    return sessID;
  }

  /**
   * Sets the value of the 'sessID' field.
   * @param value the value to set.
   */
  public void setSessID(java.lang.CharSequence value) {
    this.sessID = value;
  }

  /**
   * Gets the value of the 'playAliveTime' field.
   */
  public java.lang.Long getPlayAliveTime() {
    return playAliveTime;
  }

  /**
   * Sets the value of the 'playAliveTime' field.
   * @param value the value to set.
   */
  public void setPlayAliveTime(java.lang.Long value) {
    this.playAliveTime = value;
  }

  /**
   * Gets the value of the 'srvIP' field.
   */
  public java.lang.Long getSrvIP() {
    return srvIP;
  }

  /**
   * Sets the value of the 'srvIP' field.
   * @param value the value to set.
   */
  public void setSrvIP(java.lang.Long value) {
    this.srvIP = value;
  }

  /**
   * Gets the value of the 'avgSpeed' field.
   */
  public java.lang.Long getAvgSpeed() {
    return avgSpeed;
  }

  /**
   * Sets the value of the 'avgSpeed' field.
   * @param value the value to set.
   */
  public void setAvgSpeed(java.lang.Long value) {
    this.avgSpeed = value;
  }

  /** Creates a new HiveOrderServerRecord RecordBuilder */
  public static com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder newBuilder() {
    return new com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder();
  }
  
  /** Creates a new HiveOrderServerRecord RecordBuilder by copying an existing Builder */
  public static com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder newBuilder(com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder other) {
    return new com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder(other);
  }
  
  /** Creates a new HiveOrderServerRecord RecordBuilder by copying an existing HiveOrderServerRecord instance */
  public static com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder newBuilder(com.voole.hobbit.avro.hive.HiveOrderServerRecord other) {
    return new com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for HiveOrderServerRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HiveOrderServerRecord>
    implements org.apache.avro.data.RecordBuilder<HiveOrderServerRecord> {

    private java.lang.CharSequence sessID;
    private java.lang.Long playAliveTime;
    private java.lang.Long srvIP;
    private java.lang.Long avgSpeed;

    /** Creates a new Builder */
    private Builder() {
      super(com.voole.hobbit.avro.hive.HiveOrderServerRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sessID)) {
        this.sessID = data().deepCopy(fields()[0].schema(), other.sessID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.playAliveTime)) {
        this.playAliveTime = data().deepCopy(fields()[1].schema(), other.playAliveTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.srvIP)) {
        this.srvIP = data().deepCopy(fields()[2].schema(), other.srvIP);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.avgSpeed)) {
        this.avgSpeed = data().deepCopy(fields()[3].schema(), other.avgSpeed);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing HiveOrderServerRecord instance */
    private Builder(com.voole.hobbit.avro.hive.HiveOrderServerRecord other) {
            super(com.voole.hobbit.avro.hive.HiveOrderServerRecord.SCHEMA$);
      if (isValidValue(fields()[0], other.sessID)) {
        this.sessID = data().deepCopy(fields()[0].schema(), other.sessID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.playAliveTime)) {
        this.playAliveTime = data().deepCopy(fields()[1].schema(), other.playAliveTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.srvIP)) {
        this.srvIP = data().deepCopy(fields()[2].schema(), other.srvIP);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.avgSpeed)) {
        this.avgSpeed = data().deepCopy(fields()[3].schema(), other.avgSpeed);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'sessID' field */
    public java.lang.CharSequence getSessID() {
      return sessID;
    }
    
    /** Sets the value of the 'sessID' field */
    public com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder setSessID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.sessID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'sessID' field has been set */
    public boolean hasSessID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'sessID' field */
    public com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder clearSessID() {
      sessID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'playAliveTime' field */
    public java.lang.Long getPlayAliveTime() {
      return playAliveTime;
    }
    
    /** Sets the value of the 'playAliveTime' field */
    public com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder setPlayAliveTime(java.lang.Long value) {
      validate(fields()[1], value);
      this.playAliveTime = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'playAliveTime' field has been set */
    public boolean hasPlayAliveTime() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'playAliveTime' field */
    public com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder clearPlayAliveTime() {
      playAliveTime = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'srvIP' field */
    public java.lang.Long getSrvIP() {
      return srvIP;
    }
    
    /** Sets the value of the 'srvIP' field */
    public com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder setSrvIP(java.lang.Long value) {
      validate(fields()[2], value);
      this.srvIP = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'srvIP' field has been set */
    public boolean hasSrvIP() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'srvIP' field */
    public com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder clearSrvIP() {
      srvIP = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'avgSpeed' field */
    public java.lang.Long getAvgSpeed() {
      return avgSpeed;
    }
    
    /** Sets the value of the 'avgSpeed' field */
    public com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder setAvgSpeed(java.lang.Long value) {
      validate(fields()[3], value);
      this.avgSpeed = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'avgSpeed' field has been set */
    public boolean hasAvgSpeed() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'avgSpeed' field */
    public com.voole.hobbit.avro.hive.HiveOrderServerRecord.Builder clearAvgSpeed() {
      avgSpeed = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public HiveOrderServerRecord build() {
      try {
        HiveOrderServerRecord record = new HiveOrderServerRecord();
        record.sessID = fieldSetFlags()[0] ? this.sessID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.playAliveTime = fieldSetFlags()[1] ? this.playAliveTime : (java.lang.Long) defaultValue(fields()[1]);
        record.srvIP = fieldSetFlags()[2] ? this.srvIP : (java.lang.Long) defaultValue(fields()[2]);
        record.avgSpeed = fieldSetFlags()[3] ? this.avgSpeed : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
